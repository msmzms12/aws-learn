import {
  _InstanceType,
  AccessScopeAnalysisFinding,
  AddedPrincipal,
  AddIpamOperatingRegion,
  AddPrefixListEntry,
  AddressAttribute,
  Affinity,
  ApplianceModeSupportValue,
  AutoPlacement,
  CapacityReservationState,
  ClientConnectOptions,
  ClientLoginBannerOptions,
  ConnectionLogOptions,
  CurrencyCodeValues,
  DnsSupportValue,
  EndDateType,
  HostnameType,
  HostRecovery,
  InstanceEventWindow,
  IpamPoolAllocation,
  Ipv6SupportValue,
  SelfServicePortal,
  SubnetAssociation,
  Tag,
  TagSpecification,
  TargetConfigurationRequest,
  TransitGatewayAssociationState,
  TransitGatewayAttachmentResourceType,
  TransitGatewayPolicyTableAssociation,
  TransitGatewayVpcAttachment,
  UnsuccessfulItem,
} from "./models_0";
import {
  AttributeValue,
  CapacityReservationPreference,
  CapacityReservationTarget,
  DiskImageFormat,
  FleetExcessCapacityTerminationPolicy,
  FleetLaunchTemplateConfigRequest,
  InstanceEventWindowTimeRangeRequest,
  InstanceRequirementsRequest,
  Ipam,
  IpamPool,
  IpamResourceTag,
  IpamScope,
  LaunchTemplate,
  LocalGatewayRoute,
  ManagedPrefixList,
  NetworkInsightsAccessScopeContent,
  Placement,
  PlatformValues,
  RequestIpamResourceTag,
  ResponseLaunchTemplateData,
  ShutdownBehavior,
  SubnetCidrReservation,
  TargetCapacitySpecificationRequest,
  TargetCapacityUnitType,
  TrafficDirection,
  TrafficMirrorFilterRule,
  TrafficMirrorRuleAction,
  VolumeType,
} from "./models_1";
import {
  AutoAcceptSharedAttachmentsValue,
  DefaultRouteTableAssociationValue,
  DefaultRouteTablePropagationValue,
  DnsOptionsSpecification,
  IKEVersionsRequestListValue,
  IpAddressType,
  IpamPoolCidr,
  PayerResponsibility,
  Phase1DHGroupNumbersRequestListValue,
  Phase1EncryptionAlgorithmsRequestListValue,
  Phase1IntegrityAlgorithmsRequestListValue,
  Phase2DHGroupNumbersRequestListValue,
  Phase2EncryptionAlgorithmsRequestListValue,
  Phase2IntegrityAlgorithmsRequestListValue,
  TrafficMirrorFilter,
  TrafficMirrorNetworkService,
  TrafficMirrorPortRangeRequest,
  TrafficMirrorSession,
  TransitGateway,
  TransitGatewayPrefixListReference,
  VpnConnection,
  VpnEcmpSupportValue,
  VpnTunnelLogOptionsSpecification,
} from "./models_2";
import {
  ArchitectureType,
  ArchitectureValues,
  AttributeBooleanValue,
  BootModeValues,
  ConversionTask,
  ExportTaskS3Location,
  Filter,
  FpgaImageAttribute,
  FpgaImageAttributeName,
  HttpTokensState,
  ImportImageLicenseConfigurationResponse,
  InstanceAttributeName,
  InstanceAutoRecoveryState,
  InstanceMetadataEndpointState,
  InstanceMetadataOptionsResponse,
  InstanceMetadataProtocolState,
  InstanceMetadataTagsState,
  InstanceStatusEvent,
  LaunchPermission,
  PaymentOption,
  PermissionGroup,
  SnapshotDetail,
  SnapshotTaskDetail,
  VirtualizationType,
} from "./models_3";
import {
  AnalysisStatus,
  CreateVolumePermission,
  EnableFastSnapshotRestoreSuccessItem,
  ExcessCapacityTerminationPolicy,
  LaunchTemplateConfig,
  ReservedInstancesConfiguration,
  SnapshotAttributeName,
  TransitGatewayPropagation,
  TransitGatewayPropagationState,
  VolumeModification,
} from "./models_4";
export interface EnableFastSnapshotRestoreStateError {
  Code?: string;
  Message?: string;
}
export interface EnableFastSnapshotRestoreStateErrorItem {
  AvailabilityZone?: string;
  Error?: EnableFastSnapshotRestoreStateError;
}
export interface EnableFastSnapshotRestoreErrorItem {
  SnapshotId?: string;
  FastSnapshotRestoreStateErrors?: EnableFastSnapshotRestoreStateErrorItem[];
}
export interface EnableFastSnapshotRestoresResult {
  Successful?: EnableFastSnapshotRestoreSuccessItem[];
  Unsuccessful?: EnableFastSnapshotRestoreErrorItem[];
}
export interface EnableImageDeprecationRequest {
  ImageId: string | undefined;
  DeprecateAt: Date | undefined;
  DryRun?: boolean;
}
export interface EnableImageDeprecationResult {
  Return?: boolean;
}
export interface EnableIpamOrganizationAdminAccountRequest {
  DryRun?: boolean;
  DelegatedAdminAccountId: string | undefined;
}
export interface EnableIpamOrganizationAdminAccountResult {
  Success?: boolean;
}
export interface EnableSerialConsoleAccessRequest {
  DryRun?: boolean;
}
export interface EnableSerialConsoleAccessResult {
  SerialConsoleAccessEnabled?: boolean;
}
export interface EnableTransitGatewayRouteTablePropagationRequest {
  TransitGatewayRouteTableId: string | undefined;
  TransitGatewayAttachmentId?: string;
  DryRun?: boolean;
  TransitGatewayRouteTableAnnouncementId?: string;
}
export interface EnableTransitGatewayRouteTablePropagationResult {
  Propagation?: TransitGatewayPropagation;
}
export interface EnableVgwRoutePropagationRequest {
  GatewayId: string | undefined;
  RouteTableId: string | undefined;
  DryRun?: boolean;
}
export interface EnableVolumeIORequest {
  DryRun?: boolean;
  VolumeId: string | undefined;
}
export interface EnableVpcClassicLinkRequest {
  DryRun?: boolean;
  VpcId: string | undefined;
}
export interface EnableVpcClassicLinkResult {
  Return?: boolean;
}
export interface EnableVpcClassicLinkDnsSupportRequest {
  VpcId?: string;
}
export interface EnableVpcClassicLinkDnsSupportResult {
  Return?: boolean;
}
export interface ExportClientVpnClientCertificateRevocationListRequest {
  ClientVpnEndpointId: string | undefined;
  DryRun?: boolean;
}
export declare enum ClientCertificateRevocationListStatusCode {
  active = "active",
  pending = "pending",
}
export interface ClientCertificateRevocationListStatus {
  Code?: ClientCertificateRevocationListStatusCode | string;
  Message?: string;
}
export interface ExportClientVpnClientCertificateRevocationListResult {
  CertificateRevocationList?: string;
  Status?: ClientCertificateRevocationListStatus;
}
export interface ExportClientVpnClientConfigurationRequest {
  ClientVpnEndpointId: string | undefined;
  DryRun?: boolean;
}
export interface ExportClientVpnClientConfigurationResult {
  ClientConfiguration?: string;
}
export interface ExportTaskS3LocationRequest {
  S3Bucket: string | undefined;
  S3Prefix?: string;
}
export interface ExportImageRequest {
  ClientToken?: string;
  Description?: string;
  DiskImageFormat: DiskImageFormat | string | undefined;
  DryRun?: boolean;
  ImageId: string | undefined;
  S3ExportLocation: ExportTaskS3LocationRequest | undefined;
  RoleName?: string;
  TagSpecifications?: TagSpecification[];
}
export interface ExportImageResult {
  Description?: string;
  DiskImageFormat?: DiskImageFormat | string;
  ExportImageTaskId?: string;
  ImageId?: string;
  RoleName?: string;
  Progress?: string;
  S3ExportLocation?: ExportTaskS3Location;
  Status?: string;
  StatusMessage?: string;
  Tags?: Tag[];
}
export interface ExportTransitGatewayRoutesRequest {
  TransitGatewayRouteTableId: string | undefined;
  Filters?: Filter[];
  S3Bucket: string | undefined;
  DryRun?: boolean;
}
export interface ExportTransitGatewayRoutesResult {
  S3Location?: string;
}
export interface GetAssociatedEnclaveCertificateIamRolesRequest {
  CertificateArn?: string;
  DryRun?: boolean;
}
export interface AssociatedRole {
  AssociatedRoleArn?: string;
  CertificateS3BucketName?: string;
  CertificateS3ObjectKey?: string;
  EncryptionKmsKeyId?: string;
}
export interface GetAssociatedEnclaveCertificateIamRolesResult {
  AssociatedRoles?: AssociatedRole[];
}
export interface GetAssociatedIpv6PoolCidrsRequest {
  PoolId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
  DryRun?: boolean;
}
export interface Ipv6CidrAssociation {
  Ipv6Cidr?: string;
  AssociatedResource?: string;
}
export interface GetAssociatedIpv6PoolCidrsResult {
  Ipv6CidrAssociations?: Ipv6CidrAssociation[];
  NextToken?: string;
}
export interface GetCapacityReservationUsageRequest {
  CapacityReservationId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
  DryRun?: boolean;
}
export interface InstanceUsage {
  AccountId?: string;
  UsedInstanceCount?: number;
}
export interface GetCapacityReservationUsageResult {
  NextToken?: string;
  CapacityReservationId?: string;
  InstanceType?: string;
  TotalInstanceCount?: number;
  AvailableInstanceCount?: number;
  State?: CapacityReservationState | string;
  InstanceUsages?: InstanceUsage[];
}
export interface GetCoipPoolUsageRequest {
  PoolId: string | undefined;
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
  DryRun?: boolean;
}
export interface CoipAddressUsage {
  AllocationId?: string;
  AwsAccountId?: string;
  AwsService?: string;
  CoIp?: string;
}
export interface GetCoipPoolUsageResult {
  CoipPoolId?: string;
  CoipAddressUsages?: CoipAddressUsage[];
  LocalGatewayRouteTableId?: string;
}
export interface GetConsoleOutputRequest {
  InstanceId: string | undefined;
  DryRun?: boolean;
  Latest?: boolean;
}
export interface GetConsoleOutputResult {
  InstanceId?: string;
  Output?: string;
  Timestamp?: Date;
}
export interface GetConsoleScreenshotRequest {
  DryRun?: boolean;
  InstanceId: string | undefined;
  WakeUp?: boolean;
}
export interface GetConsoleScreenshotResult {
  ImageData?: string;
  InstanceId?: string;
}
export declare enum UnlimitedSupportedInstanceFamily {
  t2 = "t2",
  t3 = "t3",
  t3a = "t3a",
  t4g = "t4g",
}
export interface GetDefaultCreditSpecificationRequest {
  DryRun?: boolean;
  InstanceFamily: UnlimitedSupportedInstanceFamily | string | undefined;
}
export interface InstanceFamilyCreditSpecification {
  InstanceFamily?: UnlimitedSupportedInstanceFamily | string;
  CpuCredits?: string;
}
export interface GetDefaultCreditSpecificationResult {
  InstanceFamilyCreditSpecification?: InstanceFamilyCreditSpecification;
}
export interface GetEbsDefaultKmsKeyIdRequest {
  DryRun?: boolean;
}
export interface GetEbsDefaultKmsKeyIdResult {
  KmsKeyId?: string;
}
export interface GetEbsEncryptionByDefaultRequest {
  DryRun?: boolean;
}
export interface GetEbsEncryptionByDefaultResult {
  EbsEncryptionByDefault?: boolean;
}
export declare enum PartitionLoadFrequency {
  DAILY = "daily",
  MONTHLY = "monthly",
  NONE = "none",
  WEEKLY = "weekly",
}
export interface AthenaIntegration {
  IntegrationResultS3DestinationArn: string | undefined;
  PartitionLoadFrequency: PartitionLoadFrequency | string | undefined;
  PartitionStartDate?: Date;
  PartitionEndDate?: Date;
}
export interface IntegrateServices {
  AthenaIntegrations?: AthenaIntegration[];
}
export interface GetFlowLogsIntegrationTemplateRequest {
  DryRun?: boolean;
  FlowLogId: string | undefined;
  ConfigDeliveryS3DestinationArn: string | undefined;
  IntegrateServices: IntegrateServices | undefined;
}
export interface GetFlowLogsIntegrationTemplateResult {
  Result?: string;
}
export interface GetGroupsForCapacityReservationRequest {
  CapacityReservationId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
  DryRun?: boolean;
}
export interface CapacityReservationGroup {
  GroupArn?: string;
  OwnerId?: string;
}
export interface GetGroupsForCapacityReservationResult {
  NextToken?: string;
  CapacityReservationGroups?: CapacityReservationGroup[];
}
export interface GetHostReservationPurchasePreviewRequest {
  HostIdSet: string[] | undefined;
  OfferingId: string | undefined;
}
export interface Purchase {
  CurrencyCode?: CurrencyCodeValues | string;
  Duration?: number;
  HostIdSet?: string[];
  HostReservationId?: string;
  HourlyPrice?: string;
  InstanceFamily?: string;
  PaymentOption?: PaymentOption | string;
  UpfrontPrice?: string;
}
export interface GetHostReservationPurchasePreviewResult {
  CurrencyCode?: CurrencyCodeValues | string;
  Purchase?: Purchase[];
  TotalHourlyPrice?: string;
  TotalUpfrontPrice?: string;
}
export interface GetInstanceTypesFromInstanceRequirementsRequest {
  DryRun?: boolean;
  ArchitectureTypes: (ArchitectureType | string)[] | undefined;
  VirtualizationTypes: (VirtualizationType | string)[] | undefined;
  InstanceRequirements: InstanceRequirementsRequest | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export interface InstanceTypeInfoFromInstanceRequirements {
  InstanceType?: string;
}
export interface GetInstanceTypesFromInstanceRequirementsResult {
  InstanceTypes?: InstanceTypeInfoFromInstanceRequirements[];
  NextToken?: string;
}
export interface GetInstanceUefiDataRequest {
  InstanceId: string | undefined;
  DryRun?: boolean;
}
export interface GetInstanceUefiDataResult {
  InstanceId?: string;
  UefiData?: string;
}
export interface GetIpamAddressHistoryRequest {
  DryRun?: boolean;
  Cidr: string | undefined;
  IpamScopeId: string | undefined;
  VpcId?: string;
  StartTime?: Date;
  EndTime?: Date;
  MaxResults?: number;
  NextToken?: string;
}
export declare enum IpamComplianceStatus {
  compliant = "compliant",
  ignored = "ignored",
  noncompliant = "noncompliant",
  unmanaged = "unmanaged",
}
export declare enum IpamOverlapStatus {
  ignored = "ignored",
  nonoverlapping = "nonoverlapping",
  overlapping = "overlapping",
}
export declare enum IpamAddressHistoryResourceType {
  eip = "eip",
  instance = "instance",
  network_interface = "network-interface",
  subnet = "subnet",
  vpc = "vpc",
}
export interface IpamAddressHistoryRecord {
  ResourceOwnerId?: string;
  ResourceRegion?: string;
  ResourceType?: IpamAddressHistoryResourceType | string;
  ResourceId?: string;
  ResourceCidr?: string;
  ResourceName?: string;
  ResourceComplianceStatus?: IpamComplianceStatus | string;
  ResourceOverlapStatus?: IpamOverlapStatus | string;
  VpcId?: string;
  SampledStartTime?: Date;
  SampledEndTime?: Date;
}
export interface GetIpamAddressHistoryResult {
  HistoryRecords?: IpamAddressHistoryRecord[];
  NextToken?: string;
}
export interface GetIpamPoolAllocationsRequest {
  DryRun?: boolean;
  IpamPoolId: string | undefined;
  IpamPoolAllocationId?: string;
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
}
export interface GetIpamPoolAllocationsResult {
  IpamPoolAllocations?: IpamPoolAllocation[];
  NextToken?: string;
}
export interface GetIpamPoolCidrsRequest {
  DryRun?: boolean;
  IpamPoolId: string | undefined;
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
}
export interface GetIpamPoolCidrsResult {
  IpamPoolCidrs?: IpamPoolCidr[];
  NextToken?: string;
}
export declare enum IpamResourceType {
  eip = "eip",
  ipv6_pool = "ipv6-pool",
  public_ipv4_pool = "public-ipv4-pool",
  subnet = "subnet",
  vpc = "vpc",
}
export interface GetIpamResourceCidrsRequest {
  DryRun?: boolean;
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
  IpamScopeId: string | undefined;
  IpamPoolId?: string;
  ResourceId?: string;
  ResourceType?: IpamResourceType | string;
  ResourceTag?: RequestIpamResourceTag;
  ResourceOwner?: string;
}
export declare enum IpamManagementState {
  ignored = "ignored",
  managed = "managed",
  unmanaged = "unmanaged",
}
export interface IpamResourceCidr {
  IpamId?: string;
  IpamScopeId?: string;
  IpamPoolId?: string;
  ResourceRegion?: string;
  ResourceOwnerId?: string;
  ResourceId?: string;
  ResourceName?: string;
  ResourceCidr?: string;
  ResourceType?: IpamResourceType | string;
  ResourceTags?: IpamResourceTag[];
  IpUsage?: number;
  ComplianceStatus?: IpamComplianceStatus | string;
  ManagementState?: IpamManagementState | string;
  OverlapStatus?: IpamOverlapStatus | string;
  VpcId?: string;
}
export interface GetIpamResourceCidrsResult {
  NextToken?: string;
  IpamResourceCidrs?: IpamResourceCidr[];
}
export interface GetLaunchTemplateDataRequest {
  DryRun?: boolean;
  InstanceId: string | undefined;
}
export interface GetLaunchTemplateDataResult {
  LaunchTemplateData?: ResponseLaunchTemplateData;
}
export interface GetManagedPrefixListAssociationsRequest {
  DryRun?: boolean;
  PrefixListId: string | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export interface PrefixListAssociation {
  ResourceId?: string;
  ResourceOwner?: string;
}
export interface GetManagedPrefixListAssociationsResult {
  PrefixListAssociations?: PrefixListAssociation[];
  NextToken?: string;
}
export interface GetManagedPrefixListEntriesRequest {
  DryRun?: boolean;
  PrefixListId: string | undefined;
  TargetVersion?: number;
  MaxResults?: number;
  NextToken?: string;
}
export interface PrefixListEntry {
  Cidr?: string;
  Description?: string;
}
export interface GetManagedPrefixListEntriesResult {
  Entries?: PrefixListEntry[];
  NextToken?: string;
}
export interface GetNetworkInsightsAccessScopeAnalysisFindingsRequest {
  NetworkInsightsAccessScopeAnalysisId: string | undefined;
  MaxResults?: number;
  NextToken?: string;
  DryRun?: boolean;
}
export interface GetNetworkInsightsAccessScopeAnalysisFindingsResult {
  NetworkInsightsAccessScopeAnalysisId?: string;
  AnalysisStatus?: AnalysisStatus | string;
  AnalysisFindings?: AccessScopeAnalysisFinding[];
  NextToken?: string;
}
export interface GetNetworkInsightsAccessScopeContentRequest {
  NetworkInsightsAccessScopeId: string | undefined;
  DryRun?: boolean;
}
export interface GetNetworkInsightsAccessScopeContentResult {
  NetworkInsightsAccessScopeContent?: NetworkInsightsAccessScopeContent;
}
export interface GetPasswordDataRequest {
  InstanceId: string | undefined;
  DryRun?: boolean;
}
export interface GetPasswordDataResult {
  InstanceId?: string;
  PasswordData?: string;
  Timestamp?: Date;
}
export interface GetReservedInstancesExchangeQuoteRequest {
  DryRun?: boolean;
  ReservedInstanceIds: string[] | undefined;
  TargetConfigurations?: TargetConfigurationRequest[];
}
export interface ReservationValue {
  HourlyPrice?: string;
  RemainingTotalValue?: string;
  RemainingUpfrontValue?: string;
}
export interface ReservedInstanceReservationValue {
  ReservationValue?: ReservationValue;
  ReservedInstanceId?: string;
}
export interface TargetConfiguration {
  InstanceCount?: number;
  OfferingId?: string;
}
export interface TargetReservationValue {
  ReservationValue?: ReservationValue;
  TargetConfiguration?: TargetConfiguration;
}
export interface GetReservedInstancesExchangeQuoteResult {
  CurrencyCode?: string;
  IsValidExchange?: boolean;
  OutputReservedInstancesWillExpireAt?: Date;
  PaymentDue?: string;
  ReservedInstanceValueRollup?: ReservationValue;
  ReservedInstanceValueSet?: ReservedInstanceReservationValue[];
  TargetConfigurationValueRollup?: ReservationValue;
  TargetConfigurationValueSet?: TargetReservationValue[];
  ValidationFailureReason?: string;
}
export interface GetSerialConsoleAccessStatusRequest {
  DryRun?: boolean;
}
export interface GetSerialConsoleAccessStatusResult {
  SerialConsoleAccessEnabled?: boolean;
}
export interface InstanceRequirementsWithMetadataRequest {
  ArchitectureTypes?: (ArchitectureType | string)[];
  VirtualizationTypes?: (VirtualizationType | string)[];
  InstanceRequirements?: InstanceRequirementsRequest;
}
export interface GetSpotPlacementScoresRequest {
  InstanceTypes?: string[];
  TargetCapacity: number | undefined;
  TargetCapacityUnitType?: TargetCapacityUnitType | string;
  SingleAvailabilityZone?: boolean;
  RegionNames?: string[];
  InstanceRequirementsWithMetadata?: InstanceRequirementsWithMetadataRequest;
  DryRun?: boolean;
  MaxResults?: number;
  NextToken?: string;
}
export interface SpotPlacementScore {
  Region?: string;
  AvailabilityZoneId?: string;
  Score?: number;
}
export interface GetSpotPlacementScoresResult {
  SpotPlacementScores?: SpotPlacementScore[];
  NextToken?: string;
}
export interface GetSubnetCidrReservationsRequest {
  Filters?: Filter[];
  SubnetId: string | undefined;
  DryRun?: boolean;
  NextToken?: string;
  MaxResults?: number;
}
export interface GetSubnetCidrReservationsResult {
  SubnetIpv4CidrReservations?: SubnetCidrReservation[];
  SubnetIpv6CidrReservations?: SubnetCidrReservation[];
  NextToken?: string;
}
export interface GetTransitGatewayAttachmentPropagationsRequest {
  TransitGatewayAttachmentId: string | undefined;
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
  DryRun?: boolean;
}
export interface TransitGatewayAttachmentPropagation {
  TransitGatewayRouteTableId?: string;
  State?: TransitGatewayPropagationState | string;
}
export interface GetTransitGatewayAttachmentPropagationsResult {
  TransitGatewayAttachmentPropagations?: TransitGatewayAttachmentPropagation[];
  NextToken?: string;
}
export interface GetTransitGatewayMulticastDomainAssociationsRequest {
  TransitGatewayMulticastDomainId?: string;
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
  DryRun?: boolean;
}
export interface TransitGatewayMulticastDomainAssociation {
  TransitGatewayAttachmentId?: string;
  ResourceId?: string;
  ResourceType?: TransitGatewayAttachmentResourceType | string;
  ResourceOwnerId?: string;
  Subnet?: SubnetAssociation;
}
export interface GetTransitGatewayMulticastDomainAssociationsResult {
  MulticastDomainAssociations?: TransitGatewayMulticastDomainAssociation[];
  NextToken?: string;
}
export interface GetTransitGatewayPolicyTableAssociationsRequest {
  TransitGatewayPolicyTableId: string | undefined;
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
  DryRun?: boolean;
}
export interface GetTransitGatewayPolicyTableAssociationsResult {
  Associations?: TransitGatewayPolicyTableAssociation[];
  NextToken?: string;
}
export interface GetTransitGatewayPolicyTableEntriesRequest {
  TransitGatewayPolicyTableId: string | undefined;
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
  DryRun?: boolean;
}
export interface TransitGatewayPolicyRuleMetaData {
  MetaDataKey?: string;
  MetaDataValue?: string;
}
export interface TransitGatewayPolicyRule {
  SourceCidrBlock?: string;
  SourcePortRange?: string;
  DestinationCidrBlock?: string;
  DestinationPortRange?: string;
  Protocol?: string;
  MetaData?: TransitGatewayPolicyRuleMetaData;
}
export interface TransitGatewayPolicyTableEntry {
  PolicyRuleNumber?: string;
  PolicyRule?: TransitGatewayPolicyRule;
  TargetRouteTableId?: string;
}
export interface GetTransitGatewayPolicyTableEntriesResult {
  TransitGatewayPolicyTableEntries?: TransitGatewayPolicyTableEntry[];
}
export interface GetTransitGatewayPrefixListReferencesRequest {
  TransitGatewayRouteTableId: string | undefined;
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
  DryRun?: boolean;
}
export interface GetTransitGatewayPrefixListReferencesResult {
  TransitGatewayPrefixListReferences?: TransitGatewayPrefixListReference[];
  NextToken?: string;
}
export interface GetTransitGatewayRouteTableAssociationsRequest {
  TransitGatewayRouteTableId: string | undefined;
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
  DryRun?: boolean;
}
export interface TransitGatewayRouteTableAssociation {
  TransitGatewayAttachmentId?: string;
  ResourceId?: string;
  ResourceType?: TransitGatewayAttachmentResourceType | string;
  State?: TransitGatewayAssociationState | string;
}
export interface GetTransitGatewayRouteTableAssociationsResult {
  Associations?: TransitGatewayRouteTableAssociation[];
  NextToken?: string;
}
export interface GetTransitGatewayRouteTablePropagationsRequest {
  TransitGatewayRouteTableId: string | undefined;
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
  DryRun?: boolean;
}
export interface TransitGatewayRouteTablePropagation {
  TransitGatewayAttachmentId?: string;
  ResourceId?: string;
  ResourceType?: TransitGatewayAttachmentResourceType | string;
  State?: TransitGatewayPropagationState | string;
  TransitGatewayRouteTableAnnouncementId?: string;
}
export interface GetTransitGatewayRouteTablePropagationsResult {
  TransitGatewayRouteTablePropagations?: TransitGatewayRouteTablePropagation[];
  NextToken?: string;
}
export interface GetVpnConnectionDeviceSampleConfigurationRequest {
  VpnConnectionId: string | undefined;
  VpnConnectionDeviceTypeId: string | undefined;
  InternetKeyExchangeVersion?: string;
  DryRun?: boolean;
}
export interface GetVpnConnectionDeviceSampleConfigurationResult {
  VpnConnectionDeviceSampleConfiguration?: string;
}
export interface GetVpnConnectionDeviceTypesRequest {
  MaxResults?: number;
  NextToken?: string;
  DryRun?: boolean;
}
export interface VpnConnectionDeviceType {
  VpnConnectionDeviceTypeId?: string;
  Vendor?: string;
  Platform?: string;
  Software?: string;
}
export interface GetVpnConnectionDeviceTypesResult {
  VpnConnectionDeviceTypes?: VpnConnectionDeviceType[];
  NextToken?: string;
}
export interface ImportClientVpnClientCertificateRevocationListRequest {
  ClientVpnEndpointId: string | undefined;
  CertificateRevocationList: string | undefined;
  DryRun?: boolean;
}
export interface ImportClientVpnClientCertificateRevocationListResult {
  Return?: boolean;
}
export interface ClientData {
  Comment?: string;
  UploadEnd?: Date;
  UploadSize?: number;
  UploadStart?: Date;
}
export interface UserBucket {
  S3Bucket?: string;
  S3Key?: string;
}
export interface ImageDiskContainer {
  Description?: string;
  DeviceName?: string;
  Format?: string;
  SnapshotId?: string;
  Url?: string;
  UserBucket?: UserBucket;
}
export interface ImportImageLicenseConfigurationRequest {
  LicenseConfigurationArn?: string;
}
export interface ImportImageRequest {
  Architecture?: string;
  ClientData?: ClientData;
  ClientToken?: string;
  Description?: string;
  DiskContainers?: ImageDiskContainer[];
  DryRun?: boolean;
  Encrypted?: boolean;
  Hypervisor?: string;
  KmsKeyId?: string;
  LicenseType?: string;
  Platform?: string;
  RoleName?: string;
  LicenseSpecifications?: ImportImageLicenseConfigurationRequest[];
  TagSpecifications?: TagSpecification[];
  UsageOperation?: string;
  BootMode?: BootModeValues | string;
}
export interface ImportImageResult {
  Architecture?: string;
  Description?: string;
  Encrypted?: boolean;
  Hypervisor?: string;
  ImageId?: string;
  ImportTaskId?: string;
  KmsKeyId?: string;
  LicenseType?: string;
  Platform?: string;
  Progress?: string;
  SnapshotDetails?: SnapshotDetail[];
  Status?: string;
  StatusMessage?: string;
  LicenseSpecifications?: ImportImageLicenseConfigurationResponse[];
  Tags?: Tag[];
  UsageOperation?: string;
}
export interface DiskImageDetail {
  Bytes: number | undefined;
  Format: DiskImageFormat | string | undefined;
  ImportManifestUrl: string | undefined;
}
export interface VolumeDetail {
  Size: number | undefined;
}
export interface DiskImage {
  Description?: string;
  Image?: DiskImageDetail;
  Volume?: VolumeDetail;
}
export interface UserData {
  Data?: string;
}
export interface ImportInstanceLaunchSpecification {
  AdditionalInfo?: string;
  Architecture?: ArchitectureValues | string;
  GroupIds?: string[];
  GroupNames?: string[];
  InstanceInitiatedShutdownBehavior?: ShutdownBehavior | string;
  InstanceType?: _InstanceType | string;
  Monitoring?: boolean;
  Placement?: Placement;
  PrivateIpAddress?: string;
  SubnetId?: string;
  UserData?: UserData;
}
export interface ImportInstanceRequest {
  Description?: string;
  DiskImages?: DiskImage[];
  DryRun?: boolean;
  LaunchSpecification?: ImportInstanceLaunchSpecification;
  Platform: PlatformValues | string | undefined;
}
export interface ImportInstanceResult {
  ConversionTask?: ConversionTask;
}
export interface ImportKeyPairRequest {
  DryRun?: boolean;
  KeyName: string | undefined;
  PublicKeyMaterial: Uint8Array | undefined;
  TagSpecifications?: TagSpecification[];
}
export interface ImportKeyPairResult {
  KeyFingerprint?: string;
  KeyName?: string;
  KeyPairId?: string;
  Tags?: Tag[];
}
export interface SnapshotDiskContainer {
  Description?: string;
  Format?: string;
  Url?: string;
  UserBucket?: UserBucket;
}
export interface ImportSnapshotRequest {
  ClientData?: ClientData;
  ClientToken?: string;
  Description?: string;
  DiskContainer?: SnapshotDiskContainer;
  DryRun?: boolean;
  Encrypted?: boolean;
  KmsKeyId?: string;
  RoleName?: string;
  TagSpecifications?: TagSpecification[];
}
export interface ImportSnapshotResult {
  Description?: string;
  ImportTaskId?: string;
  SnapshotTaskDetail?: SnapshotTaskDetail;
  Tags?: Tag[];
}
export interface ImportVolumeRequest {
  AvailabilityZone: string | undefined;
  Description?: string;
  DryRun?: boolean;
  Image: DiskImageDetail | undefined;
  Volume: VolumeDetail | undefined;
}
export interface ImportVolumeResult {
  ConversionTask?: ConversionTask;
}
export interface ListImagesInRecycleBinRequest {
  ImageIds?: string[];
  NextToken?: string;
  MaxResults?: number;
  DryRun?: boolean;
}
export interface ImageRecycleBinInfo {
  ImageId?: string;
  Name?: string;
  Description?: string;
  RecycleBinEnterTime?: Date;
  RecycleBinExitTime?: Date;
}
export interface ListImagesInRecycleBinResult {
  Images?: ImageRecycleBinInfo[];
  NextToken?: string;
}
export interface ListSnapshotsInRecycleBinRequest {
  MaxResults?: number;
  NextToken?: string;
  SnapshotIds?: string[];
  DryRun?: boolean;
}
export interface SnapshotRecycleBinInfo {
  SnapshotId?: string;
  RecycleBinEnterTime?: Date;
  RecycleBinExitTime?: Date;
  Description?: string;
  VolumeId?: string;
}
export interface ListSnapshotsInRecycleBinResult {
  Snapshots?: SnapshotRecycleBinInfo[];
  NextToken?: string;
}
export interface ModifyAddressAttributeRequest {
  AllocationId: string | undefined;
  DomainName?: string;
  DryRun?: boolean;
}
export interface ModifyAddressAttributeResult {
  Address?: AddressAttribute;
}
export declare enum ModifyAvailabilityZoneOptInStatus {
  not_opted_in = "not-opted-in",
  opted_in = "opted-in",
}
export interface ModifyAvailabilityZoneGroupRequest {
  GroupName: string | undefined;
  OptInStatus: ModifyAvailabilityZoneOptInStatus | string | undefined;
  DryRun?: boolean;
}
export interface ModifyAvailabilityZoneGroupResult {
  Return?: boolean;
}
export interface ModifyCapacityReservationRequest {
  CapacityReservationId: string | undefined;
  InstanceCount?: number;
  EndDate?: Date;
  EndDateType?: EndDateType | string;
  Accept?: boolean;
  DryRun?: boolean;
  AdditionalInfo?: string;
}
export interface ModifyCapacityReservationResult {
  Return?: boolean;
}
export interface ModifyCapacityReservationFleetRequest {
  CapacityReservationFleetId: string | undefined;
  TotalTargetCapacity?: number;
  EndDate?: Date;
  DryRun?: boolean;
  RemoveEndDate?: boolean;
}
export interface ModifyCapacityReservationFleetResult {
  Return?: boolean;
}
export interface DnsServersOptionsModifyStructure {
  CustomDnsServers?: string[];
  Enabled?: boolean;
}
export interface ModifyClientVpnEndpointRequest {
  ClientVpnEndpointId: string | undefined;
  ServerCertificateArn?: string;
  ConnectionLogOptions?: ConnectionLogOptions;
  DnsServers?: DnsServersOptionsModifyStructure;
  VpnPort?: number;
  Description?: string;
  SplitTunnel?: boolean;
  DryRun?: boolean;
  SecurityGroupIds?: string[];
  VpcId?: string;
  SelfServicePortal?: SelfServicePortal | string;
  ClientConnectOptions?: ClientConnectOptions;
  SessionTimeoutHours?: number;
  ClientLoginBannerOptions?: ClientLoginBannerOptions;
}
export interface ModifyClientVpnEndpointResult {
  Return?: boolean;
}
export interface ModifyDefaultCreditSpecificationRequest {
  DryRun?: boolean;
  InstanceFamily: UnlimitedSupportedInstanceFamily | string | undefined;
  CpuCredits: string | undefined;
}
export interface ModifyDefaultCreditSpecificationResult {
  InstanceFamilyCreditSpecification?: InstanceFamilyCreditSpecification;
}
export interface ModifyEbsDefaultKmsKeyIdRequest {
  KmsKeyId: string | undefined;
  DryRun?: boolean;
}
export interface ModifyEbsDefaultKmsKeyIdResult {
  KmsKeyId?: string;
}
export interface ModifyFleetRequest {
  DryRun?: boolean;
  ExcessCapacityTerminationPolicy?:
    | FleetExcessCapacityTerminationPolicy
    | string;
  LaunchTemplateConfigs?: FleetLaunchTemplateConfigRequest[];
  FleetId: string | undefined;
  TargetCapacitySpecification?: TargetCapacitySpecificationRequest;
  Context?: string;
}
export interface ModifyFleetResult {
  Return?: boolean;
}
export interface LoadPermissionRequest {
  Group?: PermissionGroup | string;
  UserId?: string;
}
export interface LoadPermissionModifications {
  Add?: LoadPermissionRequest[];
  Remove?: LoadPermissionRequest[];
}
export declare enum OperationType {
  add = "add",
  remove = "remove",
}
export interface ModifyFpgaImageAttributeRequest {
  DryRun?: boolean;
  FpgaImageId: string | undefined;
  Attribute?: FpgaImageAttributeName | string;
  OperationType?: OperationType | string;
  UserIds?: string[];
  UserGroups?: string[];
  ProductCodes?: string[];
  LoadPermission?: LoadPermissionModifications;
  Description?: string;
  Name?: string;
}
export interface ModifyFpgaImageAttributeResult {
  FpgaImageAttribute?: FpgaImageAttribute;
}
export interface ModifyHostsRequest {
  AutoPlacement?: AutoPlacement | string;
  HostIds: string[] | undefined;
  HostRecovery?: HostRecovery | string;
  InstanceType?: string;
  InstanceFamily?: string;
}
export interface ModifyHostsResult {
  Successful?: string[];
  Unsuccessful?: UnsuccessfulItem[];
}
export interface ModifyIdentityIdFormatRequest {
  PrincipalArn: string | undefined;
  Resource: string | undefined;
  UseLongIds: boolean | undefined;
}
export interface ModifyIdFormatRequest {
  Resource: string | undefined;
  UseLongIds: boolean | undefined;
}
export interface LaunchPermissionModifications {
  Add?: LaunchPermission[];
  Remove?: LaunchPermission[];
}
export interface ModifyImageAttributeRequest {
  Attribute?: string;
  Description?: AttributeValue;
  ImageId: string | undefined;
  LaunchPermission?: LaunchPermissionModifications;
  OperationType?: OperationType | string;
  ProductCodes?: string[];
  UserGroups?: string[];
  UserIds?: string[];
  Value?: string;
  DryRun?: boolean;
  OrganizationArns?: string[];
  OrganizationalUnitArns?: string[];
}
export interface EbsInstanceBlockDeviceSpecification {
  DeleteOnTermination?: boolean;
  VolumeId?: string;
}
export interface InstanceBlockDeviceMappingSpecification {
  DeviceName?: string;
  Ebs?: EbsInstanceBlockDeviceSpecification;
  NoDevice?: string;
  VirtualName?: string;
}
export interface BlobAttributeValue {
  Value?: Uint8Array;
}
export interface ModifyInstanceAttributeRequest {
  SourceDestCheck?: AttributeBooleanValue;
  Attribute?: InstanceAttributeName | string;
  BlockDeviceMappings?: InstanceBlockDeviceMappingSpecification[];
  DisableApiTermination?: AttributeBooleanValue;
  DryRun?: boolean;
  EbsOptimized?: AttributeBooleanValue;
  EnaSupport?: AttributeBooleanValue;
  Groups?: string[];
  InstanceId: string | undefined;
  InstanceInitiatedShutdownBehavior?: AttributeValue;
  InstanceType?: AttributeValue;
  Kernel?: AttributeValue;
  Ramdisk?: AttributeValue;
  SriovNetSupport?: AttributeValue;
  UserData?: BlobAttributeValue;
  Value?: string;
  DisableApiStop?: AttributeBooleanValue;
}
export interface CapacityReservationSpecification {
  CapacityReservationPreference?: CapacityReservationPreference | string;
  CapacityReservationTarget?: CapacityReservationTarget;
}
export interface ModifyInstanceCapacityReservationAttributesRequest {
  InstanceId: string | undefined;
  CapacityReservationSpecification:
    | CapacityReservationSpecification
    | undefined;
  DryRun?: boolean;
}
export interface ModifyInstanceCapacityReservationAttributesResult {
  Return?: boolean;
}
export interface InstanceCreditSpecificationRequest {
  InstanceId?: string;
  CpuCredits?: string;
}
export interface ModifyInstanceCreditSpecificationRequest {
  DryRun?: boolean;
  ClientToken?: string;
  InstanceCreditSpecifications:
    | InstanceCreditSpecificationRequest[]
    | undefined;
}
export interface SuccessfulInstanceCreditSpecificationItem {
  InstanceId?: string;
}
export declare enum UnsuccessfulInstanceCreditSpecificationErrorCode {
  INCORRECT_INSTANCE_STATE = "IncorrectInstanceState",
  INSTANCE_CREDIT_SPECIFICATION_NOT_SUPPORTED = "InstanceCreditSpecification.NotSupported",
  INSTANCE_NOT_FOUND = "InvalidInstanceID.NotFound",
  INVALID_INSTANCE_ID = "InvalidInstanceID.Malformed",
}
export interface UnsuccessfulInstanceCreditSpecificationItemError {
  Code?: UnsuccessfulInstanceCreditSpecificationErrorCode | string;
  Message?: string;
}
export interface UnsuccessfulInstanceCreditSpecificationItem {
  InstanceId?: string;
  Error?: UnsuccessfulInstanceCreditSpecificationItemError;
}
export interface ModifyInstanceCreditSpecificationResult {
  SuccessfulInstanceCreditSpecifications?: SuccessfulInstanceCreditSpecificationItem[];
  UnsuccessfulInstanceCreditSpecifications?: UnsuccessfulInstanceCreditSpecificationItem[];
}
export interface ModifyInstanceEventStartTimeRequest {
  DryRun?: boolean;
  InstanceId: string | undefined;
  InstanceEventId: string | undefined;
  NotBefore: Date | undefined;
}
export interface ModifyInstanceEventStartTimeResult {
  Event?: InstanceStatusEvent;
}
export interface ModifyInstanceEventWindowRequest {
  DryRun?: boolean;
  Name?: string;
  InstanceEventWindowId: string | undefined;
  TimeRanges?: InstanceEventWindowTimeRangeRequest[];
  CronExpression?: string;
}
export interface ModifyInstanceEventWindowResult {
  InstanceEventWindow?: InstanceEventWindow;
}
export interface ModifyInstanceMaintenanceOptionsRequest {
  InstanceId: string | undefined;
  AutoRecovery?: InstanceAutoRecoveryState | string;
  DryRun?: boolean;
}
export interface ModifyInstanceMaintenanceOptionsResult {
  InstanceId?: string;
  AutoRecovery?: InstanceAutoRecoveryState | string;
}
export interface ModifyInstanceMetadataOptionsRequest {
  InstanceId: string | undefined;
  HttpTokens?: HttpTokensState | string;
  HttpPutResponseHopLimit?: number;
  HttpEndpoint?: InstanceMetadataEndpointState | string;
  DryRun?: boolean;
  HttpProtocolIpv6?: InstanceMetadataProtocolState | string;
  InstanceMetadataTags?: InstanceMetadataTagsState | string;
}
export interface ModifyInstanceMetadataOptionsResult {
  InstanceId?: string;
  InstanceMetadataOptions?: InstanceMetadataOptionsResponse;
}
export declare enum HostTenancy {
  dedicated = "dedicated",
  host = "host",
}
export interface ModifyInstancePlacementRequest {
  Affinity?: Affinity | string;
  GroupName?: string;
  HostId?: string;
  InstanceId: string | undefined;
  Tenancy?: HostTenancy | string;
  PartitionNumber?: number;
  HostResourceGroupArn?: string;
}
export interface ModifyInstancePlacementResult {
  Return?: boolean;
}
export interface RemoveIpamOperatingRegion {
  RegionName?: string;
}
export interface ModifyIpamRequest {
  DryRun?: boolean;
  IpamId: string | undefined;
  Description?: string;
  AddOperatingRegions?: AddIpamOperatingRegion[];
  RemoveOperatingRegions?: RemoveIpamOperatingRegion[];
}
export interface ModifyIpamResult {
  Ipam?: Ipam;
}
export interface ModifyIpamPoolRequest {
  DryRun?: boolean;
  IpamPoolId: string | undefined;
  Description?: string;
  AutoImport?: boolean;
  AllocationMinNetmaskLength?: number;
  AllocationMaxNetmaskLength?: number;
  AllocationDefaultNetmaskLength?: number;
  ClearAllocationDefaultNetmaskLength?: boolean;
  AddAllocationResourceTags?: RequestIpamResourceTag[];
  RemoveAllocationResourceTags?: RequestIpamResourceTag[];
}
export interface ModifyIpamPoolResult {
  IpamPool?: IpamPool;
}
export interface ModifyIpamResourceCidrRequest {
  DryRun?: boolean;
  ResourceId: string | undefined;
  ResourceCidr: string | undefined;
  ResourceRegion: string | undefined;
  CurrentIpamScopeId: string | undefined;
  DestinationIpamScopeId?: string;
  Monitored: boolean | undefined;
}
export interface ModifyIpamResourceCidrResult {
  IpamResourceCidr?: IpamResourceCidr;
}
export interface ModifyIpamScopeRequest {
  DryRun?: boolean;
  IpamScopeId: string | undefined;
  Description?: string;
}
export interface ModifyIpamScopeResult {
  IpamScope?: IpamScope;
}
export interface ModifyLaunchTemplateRequest {
  DryRun?: boolean;
  ClientToken?: string;
  LaunchTemplateId?: string;
  LaunchTemplateName?: string;
  DefaultVersion?: string;
}
export interface ModifyLaunchTemplateResult {
  LaunchTemplate?: LaunchTemplate;
}
export interface ModifyLocalGatewayRouteRequest {
  DestinationCidrBlock: string | undefined;
  LocalGatewayRouteTableId: string | undefined;
  LocalGatewayVirtualInterfaceGroupId?: string;
  NetworkInterfaceId?: string;
  DryRun?: boolean;
}
export interface ModifyLocalGatewayRouteResult {
  Route?: LocalGatewayRoute;
}
export interface RemovePrefixListEntry {
  Cidr: string | undefined;
}
export interface ModifyManagedPrefixListRequest {
  DryRun?: boolean;
  PrefixListId: string | undefined;
  CurrentVersion?: number;
  PrefixListName?: string;
  AddEntries?: AddPrefixListEntry[];
  RemoveEntries?: RemovePrefixListEntry[];
  MaxEntries?: number;
}
export interface ModifyManagedPrefixListResult {
  PrefixList?: ManagedPrefixList;
}
export interface NetworkInterfaceAttachmentChanges {
  AttachmentId?: string;
  DeleteOnTermination?: boolean;
}
export interface ModifyNetworkInterfaceAttributeRequest {
  Attachment?: NetworkInterfaceAttachmentChanges;
  Description?: AttributeValue;
  DryRun?: boolean;
  Groups?: string[];
  NetworkInterfaceId: string | undefined;
  SourceDestCheck?: AttributeBooleanValue;
}
export interface ModifyPrivateDnsNameOptionsRequest {
  DryRun?: boolean;
  InstanceId?: string;
  PrivateDnsHostnameType?: HostnameType | string;
  EnableResourceNameDnsARecord?: boolean;
  EnableResourceNameDnsAAAARecord?: boolean;
}
export interface ModifyPrivateDnsNameOptionsResult {
  Return?: boolean;
}
export interface ModifyReservedInstancesRequest {
  ReservedInstancesIds: string[] | undefined;
  ClientToken?: string;
  TargetConfigurations: ReservedInstancesConfiguration[] | undefined;
}
export interface ModifyReservedInstancesResult {
  ReservedInstancesModificationId?: string;
}
export interface SecurityGroupRuleRequest {
  IpProtocol?: string;
  FromPort?: number;
  ToPort?: number;
  CidrIpv4?: string;
  CidrIpv6?: string;
  PrefixListId?: string;
  ReferencedGroupId?: string;
  Description?: string;
}
export interface SecurityGroupRuleUpdate {
  SecurityGroupRuleId?: string;
  SecurityGroupRule?: SecurityGroupRuleRequest;
}
export interface ModifySecurityGroupRulesRequest {
  GroupId: string | undefined;
  SecurityGroupRules: SecurityGroupRuleUpdate[] | undefined;
  DryRun?: boolean;
}
export interface ModifySecurityGroupRulesResult {
  Return?: boolean;
}
export interface CreateVolumePermissionModifications {
  Add?: CreateVolumePermission[];
  Remove?: CreateVolumePermission[];
}
export interface ModifySnapshotAttributeRequest {
  Attribute?: SnapshotAttributeName | string;
  CreateVolumePermission?: CreateVolumePermissionModifications;
  GroupNames?: string[];
  OperationType?: OperationType | string;
  SnapshotId: string | undefined;
  UserIds?: string[];
  DryRun?: boolean;
}
export declare enum TargetStorageTier {
  archive = "archive",
}
export interface ModifySnapshotTierRequest {
  SnapshotId: string | undefined;
  StorageTier?: TargetStorageTier | string;
  DryRun?: boolean;
}
export interface ModifySnapshotTierResult {
  SnapshotId?: string;
  TieringStartTime?: Date;
}
export interface ModifySpotFleetRequestRequest {
  ExcessCapacityTerminationPolicy?: ExcessCapacityTerminationPolicy | string;
  LaunchTemplateConfigs?: LaunchTemplateConfig[];
  SpotFleetRequestId: string | undefined;
  TargetCapacity?: number;
  OnDemandTargetCapacity?: number;
  Context?: string;
}
export interface ModifySpotFleetRequestResponse {
  Return?: boolean;
}
export interface ModifySubnetAttributeRequest {
  AssignIpv6AddressOnCreation?: AttributeBooleanValue;
  MapPublicIpOnLaunch?: AttributeBooleanValue;
  SubnetId: string | undefined;
  MapCustomerOwnedIpOnLaunch?: AttributeBooleanValue;
  CustomerOwnedIpv4Pool?: string;
  EnableDns64?: AttributeBooleanValue;
  PrivateDnsHostnameTypeOnLaunch?: HostnameType | string;
  EnableResourceNameDnsARecordOnLaunch?: AttributeBooleanValue;
  EnableResourceNameDnsAAAARecordOnLaunch?: AttributeBooleanValue;
  EnableLniAtDeviceIndex?: number;
  DisableLniAtDeviceIndex?: AttributeBooleanValue;
}
export interface ModifyTrafficMirrorFilterNetworkServicesRequest {
  TrafficMirrorFilterId: string | undefined;
  AddNetworkServices?: (TrafficMirrorNetworkService | string)[];
  RemoveNetworkServices?: (TrafficMirrorNetworkService | string)[];
  DryRun?: boolean;
}
export interface ModifyTrafficMirrorFilterNetworkServicesResult {
  TrafficMirrorFilter?: TrafficMirrorFilter;
}
export declare enum TrafficMirrorFilterRuleField {
  description = "description",
  destination_port_range = "destination-port-range",
  protocol = "protocol",
  source_port_range = "source-port-range",
}
export interface ModifyTrafficMirrorFilterRuleRequest {
  TrafficMirrorFilterRuleId: string | undefined;
  TrafficDirection?: TrafficDirection | string;
  RuleNumber?: number;
  RuleAction?: TrafficMirrorRuleAction | string;
  DestinationPortRange?: TrafficMirrorPortRangeRequest;
  SourcePortRange?: TrafficMirrorPortRangeRequest;
  Protocol?: number;
  DestinationCidrBlock?: string;
  SourceCidrBlock?: string;
  Description?: string;
  RemoveFields?: (TrafficMirrorFilterRuleField | string)[];
  DryRun?: boolean;
}
export interface ModifyTrafficMirrorFilterRuleResult {
  TrafficMirrorFilterRule?: TrafficMirrorFilterRule;
}
export declare enum TrafficMirrorSessionField {
  description = "description",
  packet_length = "packet-length",
  virtual_network_id = "virtual-network-id",
}
export interface ModifyTrafficMirrorSessionRequest {
  TrafficMirrorSessionId: string | undefined;
  TrafficMirrorTargetId?: string;
  TrafficMirrorFilterId?: string;
  PacketLength?: number;
  SessionNumber?: number;
  VirtualNetworkId?: number;
  Description?: string;
  RemoveFields?: (TrafficMirrorSessionField | string)[];
  DryRun?: boolean;
}
export interface ModifyTrafficMirrorSessionResult {
  TrafficMirrorSession?: TrafficMirrorSession;
}
export interface ModifyTransitGatewayOptions {
  AddTransitGatewayCidrBlocks?: string[];
  RemoveTransitGatewayCidrBlocks?: string[];
  VpnEcmpSupport?: VpnEcmpSupportValue | string;
  DnsSupport?: DnsSupportValue | string;
  AutoAcceptSharedAttachments?: AutoAcceptSharedAttachmentsValue | string;
  DefaultRouteTableAssociation?: DefaultRouteTableAssociationValue | string;
  AssociationDefaultRouteTableId?: string;
  DefaultRouteTablePropagation?: DefaultRouteTablePropagationValue | string;
  PropagationDefaultRouteTableId?: string;
  AmazonSideAsn?: number;
}
export interface ModifyTransitGatewayRequest {
  TransitGatewayId: string | undefined;
  Description?: string;
  Options?: ModifyTransitGatewayOptions;
  DryRun?: boolean;
}
export interface ModifyTransitGatewayResult {
  TransitGateway?: TransitGateway;
}
export interface ModifyTransitGatewayPrefixListReferenceRequest {
  TransitGatewayRouteTableId: string | undefined;
  PrefixListId: string | undefined;
  TransitGatewayAttachmentId?: string;
  Blackhole?: boolean;
  DryRun?: boolean;
}
export interface ModifyTransitGatewayPrefixListReferenceResult {
  TransitGatewayPrefixListReference?: TransitGatewayPrefixListReference;
}
export interface ModifyTransitGatewayVpcAttachmentRequestOptions {
  DnsSupport?: DnsSupportValue | string;
  Ipv6Support?: Ipv6SupportValue | string;
  ApplianceModeSupport?: ApplianceModeSupportValue | string;
}
export interface ModifyTransitGatewayVpcAttachmentRequest {
  TransitGatewayAttachmentId: string | undefined;
  AddSubnetIds?: string[];
  RemoveSubnetIds?: string[];
  Options?: ModifyTransitGatewayVpcAttachmentRequestOptions;
  DryRun?: boolean;
}
export interface ModifyTransitGatewayVpcAttachmentResult {
  TransitGatewayVpcAttachment?: TransitGatewayVpcAttachment;
}
export interface ModifyVolumeRequest {
  DryRun?: boolean;
  VolumeId: string | undefined;
  Size?: number;
  VolumeType?: VolumeType | string;
  Iops?: number;
  Throughput?: number;
  MultiAttachEnabled?: boolean;
}
export interface ModifyVolumeResult {
  VolumeModification?: VolumeModification;
}
export interface ModifyVolumeAttributeRequest {
  AutoEnableIO?: AttributeBooleanValue;
  VolumeId: string | undefined;
  DryRun?: boolean;
}
export interface ModifyVpcAttributeRequest {
  EnableDnsHostnames?: AttributeBooleanValue;
  EnableDnsSupport?: AttributeBooleanValue;
  VpcId: string | undefined;
}
export interface ModifyVpcEndpointRequest {
  DryRun?: boolean;
  VpcEndpointId: string | undefined;
  ResetPolicy?: boolean;
  PolicyDocument?: string;
  AddRouteTableIds?: string[];
  RemoveRouteTableIds?: string[];
  AddSubnetIds?: string[];
  RemoveSubnetIds?: string[];
  AddSecurityGroupIds?: string[];
  RemoveSecurityGroupIds?: string[];
  IpAddressType?: IpAddressType | string;
  DnsOptions?: DnsOptionsSpecification;
  PrivateDnsEnabled?: boolean;
}
export interface ModifyVpcEndpointResult {
  Return?: boolean;
}
export interface ModifyVpcEndpointConnectionNotificationRequest {
  DryRun?: boolean;
  ConnectionNotificationId: string | undefined;
  ConnectionNotificationArn?: string;
  ConnectionEvents?: string[];
}
export interface ModifyVpcEndpointConnectionNotificationResult {
  ReturnValue?: boolean;
}
export interface ModifyVpcEndpointServiceConfigurationRequest {
  DryRun?: boolean;
  ServiceId: string | undefined;
  PrivateDnsName?: string;
  RemovePrivateDnsName?: boolean;
  AcceptanceRequired?: boolean;
  AddNetworkLoadBalancerArns?: string[];
  RemoveNetworkLoadBalancerArns?: string[];
  AddGatewayLoadBalancerArns?: string[];
  RemoveGatewayLoadBalancerArns?: string[];
  AddSupportedIpAddressTypes?: string[];
  RemoveSupportedIpAddressTypes?: string[];
}
export interface ModifyVpcEndpointServiceConfigurationResult {
  Return?: boolean;
}
export interface ModifyVpcEndpointServicePayerResponsibilityRequest {
  DryRun?: boolean;
  ServiceId: string | undefined;
  PayerResponsibility: PayerResponsibility | string | undefined;
}
export interface ModifyVpcEndpointServicePayerResponsibilityResult {
  ReturnValue?: boolean;
}
export interface ModifyVpcEndpointServicePermissionsRequest {
  DryRun?: boolean;
  ServiceId: string | undefined;
  AddAllowedPrincipals?: string[];
  RemoveAllowedPrincipals?: string[];
}
export interface ModifyVpcEndpointServicePermissionsResult {
  AddedPrincipals?: AddedPrincipal[];
  ReturnValue?: boolean;
}
export interface PeeringConnectionOptionsRequest {
  AllowDnsResolutionFromRemoteVpc?: boolean;
  AllowEgressFromLocalClassicLinkToRemoteVpc?: boolean;
  AllowEgressFromLocalVpcToRemoteClassicLink?: boolean;
}
export interface ModifyVpcPeeringConnectionOptionsRequest {
  AccepterPeeringConnectionOptions?: PeeringConnectionOptionsRequest;
  DryRun?: boolean;
  RequesterPeeringConnectionOptions?: PeeringConnectionOptionsRequest;
  VpcPeeringConnectionId: string | undefined;
}
export interface PeeringConnectionOptions {
  AllowDnsResolutionFromRemoteVpc?: boolean;
  AllowEgressFromLocalClassicLinkToRemoteVpc?: boolean;
  AllowEgressFromLocalVpcToRemoteClassicLink?: boolean;
}
export interface ModifyVpcPeeringConnectionOptionsResult {
  AccepterPeeringConnectionOptions?: PeeringConnectionOptions;
  RequesterPeeringConnectionOptions?: PeeringConnectionOptions;
}
export declare enum VpcTenancy {
  default = "default",
}
export interface ModifyVpcTenancyRequest {
  VpcId: string | undefined;
  InstanceTenancy: VpcTenancy | string | undefined;
  DryRun?: boolean;
}
export interface ModifyVpcTenancyResult {
  ReturnValue?: boolean;
}
export interface ModifyVpnConnectionRequest {
  VpnConnectionId: string | undefined;
  TransitGatewayId?: string;
  CustomerGatewayId?: string;
  VpnGatewayId?: string;
  DryRun?: boolean;
}
export interface ModifyVpnConnectionResult {
  VpnConnection?: VpnConnection;
}
export interface ModifyVpnConnectionOptionsRequest {
  VpnConnectionId: string | undefined;
  LocalIpv4NetworkCidr?: string;
  RemoteIpv4NetworkCidr?: string;
  LocalIpv6NetworkCidr?: string;
  RemoteIpv6NetworkCidr?: string;
  DryRun?: boolean;
}
export interface ModifyVpnConnectionOptionsResult {
  VpnConnection?: VpnConnection;
}
export interface ModifyVpnTunnelCertificateRequest {
  VpnConnectionId: string | undefined;
  VpnTunnelOutsideIpAddress: string | undefined;
  DryRun?: boolean;
}
export interface ModifyVpnTunnelCertificateResult {
  VpnConnection?: VpnConnection;
}
export interface ModifyVpnTunnelOptionsSpecification {
  TunnelInsideCidr?: string;
  TunnelInsideIpv6Cidr?: string;
  PreSharedKey?: string;
  Phase1LifetimeSeconds?: number;
  Phase2LifetimeSeconds?: number;
  RekeyMarginTimeSeconds?: number;
  RekeyFuzzPercentage?: number;
  ReplayWindowSize?: number;
  DPDTimeoutSeconds?: number;
  DPDTimeoutAction?: string;
  Phase1EncryptionAlgorithms?: Phase1EncryptionAlgorithmsRequestListValue[];
  Phase2EncryptionAlgorithms?: Phase2EncryptionAlgorithmsRequestListValue[];
  Phase1IntegrityAlgorithms?: Phase1IntegrityAlgorithmsRequestListValue[];
  Phase2IntegrityAlgorithms?: Phase2IntegrityAlgorithmsRequestListValue[];
  Phase1DHGroupNumbers?: Phase1DHGroupNumbersRequestListValue[];
  Phase2DHGroupNumbers?: Phase2DHGroupNumbersRequestListValue[];
  IKEVersions?: IKEVersionsRequestListValue[];
  StartupAction?: string;
  LogOptions?: VpnTunnelLogOptionsSpecification;
}
export interface ModifyVpnTunnelOptionsRequest {
  VpnConnectionId: string | undefined;
  VpnTunnelOutsideIpAddress: string | undefined;
  TunnelOptions: ModifyVpnTunnelOptionsSpecification | undefined;
  DryRun?: boolean;
}
export interface ModifyVpnTunnelOptionsResult {
  VpnConnection?: VpnConnection;
}
export declare const EnableFastSnapshotRestoreStateErrorFilterSensitiveLog: (
  obj: EnableFastSnapshotRestoreStateError
) => any;
export declare const EnableFastSnapshotRestoreStateErrorItemFilterSensitiveLog: (
  obj: EnableFastSnapshotRestoreStateErrorItem
) => any;
export declare const EnableFastSnapshotRestoreErrorItemFilterSensitiveLog: (
  obj: EnableFastSnapshotRestoreErrorItem
) => any;
export declare const EnableFastSnapshotRestoresResultFilterSensitiveLog: (
  obj: EnableFastSnapshotRestoresResult
) => any;
export declare const EnableImageDeprecationRequestFilterSensitiveLog: (
  obj: EnableImageDeprecationRequest
) => any;
export declare const EnableImageDeprecationResultFilterSensitiveLog: (
  obj: EnableImageDeprecationResult
) => any;
export declare const EnableIpamOrganizationAdminAccountRequestFilterSensitiveLog: (
  obj: EnableIpamOrganizationAdminAccountRequest
) => any;
export declare const EnableIpamOrganizationAdminAccountResultFilterSensitiveLog: (
  obj: EnableIpamOrganizationAdminAccountResult
) => any;
export declare const EnableSerialConsoleAccessRequestFilterSensitiveLog: (
  obj: EnableSerialConsoleAccessRequest
) => any;
export declare const EnableSerialConsoleAccessResultFilterSensitiveLog: (
  obj: EnableSerialConsoleAccessResult
) => any;
export declare const EnableTransitGatewayRouteTablePropagationRequestFilterSensitiveLog: (
  obj: EnableTransitGatewayRouteTablePropagationRequest
) => any;
export declare const EnableTransitGatewayRouteTablePropagationResultFilterSensitiveLog: (
  obj: EnableTransitGatewayRouteTablePropagationResult
) => any;
export declare const EnableVgwRoutePropagationRequestFilterSensitiveLog: (
  obj: EnableVgwRoutePropagationRequest
) => any;
export declare const EnableVolumeIORequestFilterSensitiveLog: (
  obj: EnableVolumeIORequest
) => any;
export declare const EnableVpcClassicLinkRequestFilterSensitiveLog: (
  obj: EnableVpcClassicLinkRequest
) => any;
export declare const EnableVpcClassicLinkResultFilterSensitiveLog: (
  obj: EnableVpcClassicLinkResult
) => any;
export declare const EnableVpcClassicLinkDnsSupportRequestFilterSensitiveLog: (
  obj: EnableVpcClassicLinkDnsSupportRequest
) => any;
export declare const EnableVpcClassicLinkDnsSupportResultFilterSensitiveLog: (
  obj: EnableVpcClassicLinkDnsSupportResult
) => any;
export declare const ExportClientVpnClientCertificateRevocationListRequestFilterSensitiveLog: (
  obj: ExportClientVpnClientCertificateRevocationListRequest
) => any;
export declare const ClientCertificateRevocationListStatusFilterSensitiveLog: (
  obj: ClientCertificateRevocationListStatus
) => any;
export declare const ExportClientVpnClientCertificateRevocationListResultFilterSensitiveLog: (
  obj: ExportClientVpnClientCertificateRevocationListResult
) => any;
export declare const ExportClientVpnClientConfigurationRequestFilterSensitiveLog: (
  obj: ExportClientVpnClientConfigurationRequest
) => any;
export declare const ExportClientVpnClientConfigurationResultFilterSensitiveLog: (
  obj: ExportClientVpnClientConfigurationResult
) => any;
export declare const ExportTaskS3LocationRequestFilterSensitiveLog: (
  obj: ExportTaskS3LocationRequest
) => any;
export declare const ExportImageRequestFilterSensitiveLog: (
  obj: ExportImageRequest
) => any;
export declare const ExportImageResultFilterSensitiveLog: (
  obj: ExportImageResult
) => any;
export declare const ExportTransitGatewayRoutesRequestFilterSensitiveLog: (
  obj: ExportTransitGatewayRoutesRequest
) => any;
export declare const ExportTransitGatewayRoutesResultFilterSensitiveLog: (
  obj: ExportTransitGatewayRoutesResult
) => any;
export declare const GetAssociatedEnclaveCertificateIamRolesRequestFilterSensitiveLog: (
  obj: GetAssociatedEnclaveCertificateIamRolesRequest
) => any;
export declare const AssociatedRoleFilterSensitiveLog: (
  obj: AssociatedRole
) => any;
export declare const GetAssociatedEnclaveCertificateIamRolesResultFilterSensitiveLog: (
  obj: GetAssociatedEnclaveCertificateIamRolesResult
) => any;
export declare const GetAssociatedIpv6PoolCidrsRequestFilterSensitiveLog: (
  obj: GetAssociatedIpv6PoolCidrsRequest
) => any;
export declare const Ipv6CidrAssociationFilterSensitiveLog: (
  obj: Ipv6CidrAssociation
) => any;
export declare const GetAssociatedIpv6PoolCidrsResultFilterSensitiveLog: (
  obj: GetAssociatedIpv6PoolCidrsResult
) => any;
export declare const GetCapacityReservationUsageRequestFilterSensitiveLog: (
  obj: GetCapacityReservationUsageRequest
) => any;
export declare const InstanceUsageFilterSensitiveLog: (
  obj: InstanceUsage
) => any;
export declare const GetCapacityReservationUsageResultFilterSensitiveLog: (
  obj: GetCapacityReservationUsageResult
) => any;
export declare const GetCoipPoolUsageRequestFilterSensitiveLog: (
  obj: GetCoipPoolUsageRequest
) => any;
export declare const CoipAddressUsageFilterSensitiveLog: (
  obj: CoipAddressUsage
) => any;
export declare const GetCoipPoolUsageResultFilterSensitiveLog: (
  obj: GetCoipPoolUsageResult
) => any;
export declare const GetConsoleOutputRequestFilterSensitiveLog: (
  obj: GetConsoleOutputRequest
) => any;
export declare const GetConsoleOutputResultFilterSensitiveLog: (
  obj: GetConsoleOutputResult
) => any;
export declare const GetConsoleScreenshotRequestFilterSensitiveLog: (
  obj: GetConsoleScreenshotRequest
) => any;
export declare const GetConsoleScreenshotResultFilterSensitiveLog: (
  obj: GetConsoleScreenshotResult
) => any;
export declare const GetDefaultCreditSpecificationRequestFilterSensitiveLog: (
  obj: GetDefaultCreditSpecificationRequest
) => any;
export declare const InstanceFamilyCreditSpecificationFilterSensitiveLog: (
  obj: InstanceFamilyCreditSpecification
) => any;
export declare const GetDefaultCreditSpecificationResultFilterSensitiveLog: (
  obj: GetDefaultCreditSpecificationResult
) => any;
export declare const GetEbsDefaultKmsKeyIdRequestFilterSensitiveLog: (
  obj: GetEbsDefaultKmsKeyIdRequest
) => any;
export declare const GetEbsDefaultKmsKeyIdResultFilterSensitiveLog: (
  obj: GetEbsDefaultKmsKeyIdResult
) => any;
export declare const GetEbsEncryptionByDefaultRequestFilterSensitiveLog: (
  obj: GetEbsEncryptionByDefaultRequest
) => any;
export declare const GetEbsEncryptionByDefaultResultFilterSensitiveLog: (
  obj: GetEbsEncryptionByDefaultResult
) => any;
export declare const AthenaIntegrationFilterSensitiveLog: (
  obj: AthenaIntegration
) => any;
export declare const IntegrateServicesFilterSensitiveLog: (
  obj: IntegrateServices
) => any;
export declare const GetFlowLogsIntegrationTemplateRequestFilterSensitiveLog: (
  obj: GetFlowLogsIntegrationTemplateRequest
) => any;
export declare const GetFlowLogsIntegrationTemplateResultFilterSensitiveLog: (
  obj: GetFlowLogsIntegrationTemplateResult
) => any;
export declare const GetGroupsForCapacityReservationRequestFilterSensitiveLog: (
  obj: GetGroupsForCapacityReservationRequest
) => any;
export declare const CapacityReservationGroupFilterSensitiveLog: (
  obj: CapacityReservationGroup
) => any;
export declare const GetGroupsForCapacityReservationResultFilterSensitiveLog: (
  obj: GetGroupsForCapacityReservationResult
) => any;
export declare const GetHostReservationPurchasePreviewRequestFilterSensitiveLog: (
  obj: GetHostReservationPurchasePreviewRequest
) => any;
export declare const PurchaseFilterSensitiveLog: (obj: Purchase) => any;
export declare const GetHostReservationPurchasePreviewResultFilterSensitiveLog: (
  obj: GetHostReservationPurchasePreviewResult
) => any;
export declare const GetInstanceTypesFromInstanceRequirementsRequestFilterSensitiveLog: (
  obj: GetInstanceTypesFromInstanceRequirementsRequest
) => any;
export declare const InstanceTypeInfoFromInstanceRequirementsFilterSensitiveLog: (
  obj: InstanceTypeInfoFromInstanceRequirements
) => any;
export declare const GetInstanceTypesFromInstanceRequirementsResultFilterSensitiveLog: (
  obj: GetInstanceTypesFromInstanceRequirementsResult
) => any;
export declare const GetInstanceUefiDataRequestFilterSensitiveLog: (
  obj: GetInstanceUefiDataRequest
) => any;
export declare const GetInstanceUefiDataResultFilterSensitiveLog: (
  obj: GetInstanceUefiDataResult
) => any;
export declare const GetIpamAddressHistoryRequestFilterSensitiveLog: (
  obj: GetIpamAddressHistoryRequest
) => any;
export declare const IpamAddressHistoryRecordFilterSensitiveLog: (
  obj: IpamAddressHistoryRecord
) => any;
export declare const GetIpamAddressHistoryResultFilterSensitiveLog: (
  obj: GetIpamAddressHistoryResult
) => any;
export declare const GetIpamPoolAllocationsRequestFilterSensitiveLog: (
  obj: GetIpamPoolAllocationsRequest
) => any;
export declare const GetIpamPoolAllocationsResultFilterSensitiveLog: (
  obj: GetIpamPoolAllocationsResult
) => any;
export declare const GetIpamPoolCidrsRequestFilterSensitiveLog: (
  obj: GetIpamPoolCidrsRequest
) => any;
export declare const GetIpamPoolCidrsResultFilterSensitiveLog: (
  obj: GetIpamPoolCidrsResult
) => any;
export declare const GetIpamResourceCidrsRequestFilterSensitiveLog: (
  obj: GetIpamResourceCidrsRequest
) => any;
export declare const IpamResourceCidrFilterSensitiveLog: (
  obj: IpamResourceCidr
) => any;
export declare const GetIpamResourceCidrsResultFilterSensitiveLog: (
  obj: GetIpamResourceCidrsResult
) => any;
export declare const GetLaunchTemplateDataRequestFilterSensitiveLog: (
  obj: GetLaunchTemplateDataRequest
) => any;
export declare const GetLaunchTemplateDataResultFilterSensitiveLog: (
  obj: GetLaunchTemplateDataResult
) => any;
export declare const GetManagedPrefixListAssociationsRequestFilterSensitiveLog: (
  obj: GetManagedPrefixListAssociationsRequest
) => any;
export declare const PrefixListAssociationFilterSensitiveLog: (
  obj: PrefixListAssociation
) => any;
export declare const GetManagedPrefixListAssociationsResultFilterSensitiveLog: (
  obj: GetManagedPrefixListAssociationsResult
) => any;
export declare const GetManagedPrefixListEntriesRequestFilterSensitiveLog: (
  obj: GetManagedPrefixListEntriesRequest
) => any;
export declare const PrefixListEntryFilterSensitiveLog: (
  obj: PrefixListEntry
) => any;
export declare const GetManagedPrefixListEntriesResultFilterSensitiveLog: (
  obj: GetManagedPrefixListEntriesResult
) => any;
export declare const GetNetworkInsightsAccessScopeAnalysisFindingsRequestFilterSensitiveLog: (
  obj: GetNetworkInsightsAccessScopeAnalysisFindingsRequest
) => any;
export declare const GetNetworkInsightsAccessScopeAnalysisFindingsResultFilterSensitiveLog: (
  obj: GetNetworkInsightsAccessScopeAnalysisFindingsResult
) => any;
export declare const GetNetworkInsightsAccessScopeContentRequestFilterSensitiveLog: (
  obj: GetNetworkInsightsAccessScopeContentRequest
) => any;
export declare const GetNetworkInsightsAccessScopeContentResultFilterSensitiveLog: (
  obj: GetNetworkInsightsAccessScopeContentResult
) => any;
export declare const GetPasswordDataRequestFilterSensitiveLog: (
  obj: GetPasswordDataRequest
) => any;
export declare const GetPasswordDataResultFilterSensitiveLog: (
  obj: GetPasswordDataResult
) => any;
export declare const GetReservedInstancesExchangeQuoteRequestFilterSensitiveLog: (
  obj: GetReservedInstancesExchangeQuoteRequest
) => any;
export declare const ReservationValueFilterSensitiveLog: (
  obj: ReservationValue
) => any;
export declare const ReservedInstanceReservationValueFilterSensitiveLog: (
  obj: ReservedInstanceReservationValue
) => any;
export declare const TargetConfigurationFilterSensitiveLog: (
  obj: TargetConfiguration
) => any;
export declare const TargetReservationValueFilterSensitiveLog: (
  obj: TargetReservationValue
) => any;
export declare const GetReservedInstancesExchangeQuoteResultFilterSensitiveLog: (
  obj: GetReservedInstancesExchangeQuoteResult
) => any;
export declare const GetSerialConsoleAccessStatusRequestFilterSensitiveLog: (
  obj: GetSerialConsoleAccessStatusRequest
) => any;
export declare const GetSerialConsoleAccessStatusResultFilterSensitiveLog: (
  obj: GetSerialConsoleAccessStatusResult
) => any;
export declare const InstanceRequirementsWithMetadataRequestFilterSensitiveLog: (
  obj: InstanceRequirementsWithMetadataRequest
) => any;
export declare const GetSpotPlacementScoresRequestFilterSensitiveLog: (
  obj: GetSpotPlacementScoresRequest
) => any;
export declare const SpotPlacementScoreFilterSensitiveLog: (
  obj: SpotPlacementScore
) => any;
export declare const GetSpotPlacementScoresResultFilterSensitiveLog: (
  obj: GetSpotPlacementScoresResult
) => any;
export declare const GetSubnetCidrReservationsRequestFilterSensitiveLog: (
  obj: GetSubnetCidrReservationsRequest
) => any;
export declare const GetSubnetCidrReservationsResultFilterSensitiveLog: (
  obj: GetSubnetCidrReservationsResult
) => any;
export declare const GetTransitGatewayAttachmentPropagationsRequestFilterSensitiveLog: (
  obj: GetTransitGatewayAttachmentPropagationsRequest
) => any;
export declare const TransitGatewayAttachmentPropagationFilterSensitiveLog: (
  obj: TransitGatewayAttachmentPropagation
) => any;
export declare const GetTransitGatewayAttachmentPropagationsResultFilterSensitiveLog: (
  obj: GetTransitGatewayAttachmentPropagationsResult
) => any;
export declare const GetTransitGatewayMulticastDomainAssociationsRequestFilterSensitiveLog: (
  obj: GetTransitGatewayMulticastDomainAssociationsRequest
) => any;
export declare const TransitGatewayMulticastDomainAssociationFilterSensitiveLog: (
  obj: TransitGatewayMulticastDomainAssociation
) => any;
export declare const GetTransitGatewayMulticastDomainAssociationsResultFilterSensitiveLog: (
  obj: GetTransitGatewayMulticastDomainAssociationsResult
) => any;
export declare const GetTransitGatewayPolicyTableAssociationsRequestFilterSensitiveLog: (
  obj: GetTransitGatewayPolicyTableAssociationsRequest
) => any;
export declare const GetTransitGatewayPolicyTableAssociationsResultFilterSensitiveLog: (
  obj: GetTransitGatewayPolicyTableAssociationsResult
) => any;
export declare const GetTransitGatewayPolicyTableEntriesRequestFilterSensitiveLog: (
  obj: GetTransitGatewayPolicyTableEntriesRequest
) => any;
export declare const TransitGatewayPolicyRuleMetaDataFilterSensitiveLog: (
  obj: TransitGatewayPolicyRuleMetaData
) => any;
export declare const TransitGatewayPolicyRuleFilterSensitiveLog: (
  obj: TransitGatewayPolicyRule
) => any;
export declare const TransitGatewayPolicyTableEntryFilterSensitiveLog: (
  obj: TransitGatewayPolicyTableEntry
) => any;
export declare const GetTransitGatewayPolicyTableEntriesResultFilterSensitiveLog: (
  obj: GetTransitGatewayPolicyTableEntriesResult
) => any;
export declare const GetTransitGatewayPrefixListReferencesRequestFilterSensitiveLog: (
  obj: GetTransitGatewayPrefixListReferencesRequest
) => any;
export declare const GetTransitGatewayPrefixListReferencesResultFilterSensitiveLog: (
  obj: GetTransitGatewayPrefixListReferencesResult
) => any;
export declare const GetTransitGatewayRouteTableAssociationsRequestFilterSensitiveLog: (
  obj: GetTransitGatewayRouteTableAssociationsRequest
) => any;
export declare const TransitGatewayRouteTableAssociationFilterSensitiveLog: (
  obj: TransitGatewayRouteTableAssociation
) => any;
export declare const GetTransitGatewayRouteTableAssociationsResultFilterSensitiveLog: (
  obj: GetTransitGatewayRouteTableAssociationsResult
) => any;
export declare const GetTransitGatewayRouteTablePropagationsRequestFilterSensitiveLog: (
  obj: GetTransitGatewayRouteTablePropagationsRequest
) => any;
export declare const TransitGatewayRouteTablePropagationFilterSensitiveLog: (
  obj: TransitGatewayRouteTablePropagation
) => any;
export declare const GetTransitGatewayRouteTablePropagationsResultFilterSensitiveLog: (
  obj: GetTransitGatewayRouteTablePropagationsResult
) => any;
export declare const GetVpnConnectionDeviceSampleConfigurationRequestFilterSensitiveLog: (
  obj: GetVpnConnectionDeviceSampleConfigurationRequest
) => any;
export declare const GetVpnConnectionDeviceSampleConfigurationResultFilterSensitiveLog: (
  obj: GetVpnConnectionDeviceSampleConfigurationResult
) => any;
export declare const GetVpnConnectionDeviceTypesRequestFilterSensitiveLog: (
  obj: GetVpnConnectionDeviceTypesRequest
) => any;
export declare const VpnConnectionDeviceTypeFilterSensitiveLog: (
  obj: VpnConnectionDeviceType
) => any;
export declare const GetVpnConnectionDeviceTypesResultFilterSensitiveLog: (
  obj: GetVpnConnectionDeviceTypesResult
) => any;
export declare const ImportClientVpnClientCertificateRevocationListRequestFilterSensitiveLog: (
  obj: ImportClientVpnClientCertificateRevocationListRequest
) => any;
export declare const ImportClientVpnClientCertificateRevocationListResultFilterSensitiveLog: (
  obj: ImportClientVpnClientCertificateRevocationListResult
) => any;
export declare const ClientDataFilterSensitiveLog: (obj: ClientData) => any;
export declare const UserBucketFilterSensitiveLog: (obj: UserBucket) => any;
export declare const ImageDiskContainerFilterSensitiveLog: (
  obj: ImageDiskContainer
) => any;
export declare const ImportImageLicenseConfigurationRequestFilterSensitiveLog: (
  obj: ImportImageLicenseConfigurationRequest
) => any;
export declare const ImportImageRequestFilterSensitiveLog: (
  obj: ImportImageRequest
) => any;
export declare const ImportImageResultFilterSensitiveLog: (
  obj: ImportImageResult
) => any;
export declare const DiskImageDetailFilterSensitiveLog: (
  obj: DiskImageDetail
) => any;
export declare const VolumeDetailFilterSensitiveLog: (obj: VolumeDetail) => any;
export declare const DiskImageFilterSensitiveLog: (obj: DiskImage) => any;
export declare const UserDataFilterSensitiveLog: (obj: UserData) => any;
export declare const ImportInstanceLaunchSpecificationFilterSensitiveLog: (
  obj: ImportInstanceLaunchSpecification
) => any;
export declare const ImportInstanceRequestFilterSensitiveLog: (
  obj: ImportInstanceRequest
) => any;
export declare const ImportInstanceResultFilterSensitiveLog: (
  obj: ImportInstanceResult
) => any;
export declare const ImportKeyPairRequestFilterSensitiveLog: (
  obj: ImportKeyPairRequest
) => any;
export declare const ImportKeyPairResultFilterSensitiveLog: (
  obj: ImportKeyPairResult
) => any;
export declare const SnapshotDiskContainerFilterSensitiveLog: (
  obj: SnapshotDiskContainer
) => any;
export declare const ImportSnapshotRequestFilterSensitiveLog: (
  obj: ImportSnapshotRequest
) => any;
export declare const ImportSnapshotResultFilterSensitiveLog: (
  obj: ImportSnapshotResult
) => any;
export declare const ImportVolumeRequestFilterSensitiveLog: (
  obj: ImportVolumeRequest
) => any;
export declare const ImportVolumeResultFilterSensitiveLog: (
  obj: ImportVolumeResult
) => any;
export declare const ListImagesInRecycleBinRequestFilterSensitiveLog: (
  obj: ListImagesInRecycleBinRequest
) => any;
export declare const ImageRecycleBinInfoFilterSensitiveLog: (
  obj: ImageRecycleBinInfo
) => any;
export declare const ListImagesInRecycleBinResultFilterSensitiveLog: (
  obj: ListImagesInRecycleBinResult
) => any;
export declare const ListSnapshotsInRecycleBinRequestFilterSensitiveLog: (
  obj: ListSnapshotsInRecycleBinRequest
) => any;
export declare const SnapshotRecycleBinInfoFilterSensitiveLog: (
  obj: SnapshotRecycleBinInfo
) => any;
export declare const ListSnapshotsInRecycleBinResultFilterSensitiveLog: (
  obj: ListSnapshotsInRecycleBinResult
) => any;
export declare const ModifyAddressAttributeRequestFilterSensitiveLog: (
  obj: ModifyAddressAttributeRequest
) => any;
export declare const ModifyAddressAttributeResultFilterSensitiveLog: (
  obj: ModifyAddressAttributeResult
) => any;
export declare const ModifyAvailabilityZoneGroupRequestFilterSensitiveLog: (
  obj: ModifyAvailabilityZoneGroupRequest
) => any;
export declare const ModifyAvailabilityZoneGroupResultFilterSensitiveLog: (
  obj: ModifyAvailabilityZoneGroupResult
) => any;
export declare const ModifyCapacityReservationRequestFilterSensitiveLog: (
  obj: ModifyCapacityReservationRequest
) => any;
export declare const ModifyCapacityReservationResultFilterSensitiveLog: (
  obj: ModifyCapacityReservationResult
) => any;
export declare const ModifyCapacityReservationFleetRequestFilterSensitiveLog: (
  obj: ModifyCapacityReservationFleetRequest
) => any;
export declare const ModifyCapacityReservationFleetResultFilterSensitiveLog: (
  obj: ModifyCapacityReservationFleetResult
) => any;
export declare const DnsServersOptionsModifyStructureFilterSensitiveLog: (
  obj: DnsServersOptionsModifyStructure
) => any;
export declare const ModifyClientVpnEndpointRequestFilterSensitiveLog: (
  obj: ModifyClientVpnEndpointRequest
) => any;
export declare const ModifyClientVpnEndpointResultFilterSensitiveLog: (
  obj: ModifyClientVpnEndpointResult
) => any;
export declare const ModifyDefaultCreditSpecificationRequestFilterSensitiveLog: (
  obj: ModifyDefaultCreditSpecificationRequest
) => any;
export declare const ModifyDefaultCreditSpecificationResultFilterSensitiveLog: (
  obj: ModifyDefaultCreditSpecificationResult
) => any;
export declare const ModifyEbsDefaultKmsKeyIdRequestFilterSensitiveLog: (
  obj: ModifyEbsDefaultKmsKeyIdRequest
) => any;
export declare const ModifyEbsDefaultKmsKeyIdResultFilterSensitiveLog: (
  obj: ModifyEbsDefaultKmsKeyIdResult
) => any;
export declare const ModifyFleetRequestFilterSensitiveLog: (
  obj: ModifyFleetRequest
) => any;
export declare const ModifyFleetResultFilterSensitiveLog: (
  obj: ModifyFleetResult
) => any;
export declare const LoadPermissionRequestFilterSensitiveLog: (
  obj: LoadPermissionRequest
) => any;
export declare const LoadPermissionModificationsFilterSensitiveLog: (
  obj: LoadPermissionModifications
) => any;
export declare const ModifyFpgaImageAttributeRequestFilterSensitiveLog: (
  obj: ModifyFpgaImageAttributeRequest
) => any;
export declare const ModifyFpgaImageAttributeResultFilterSensitiveLog: (
  obj: ModifyFpgaImageAttributeResult
) => any;
export declare const ModifyHostsRequestFilterSensitiveLog: (
  obj: ModifyHostsRequest
) => any;
export declare const ModifyHostsResultFilterSensitiveLog: (
  obj: ModifyHostsResult
) => any;
export declare const ModifyIdentityIdFormatRequestFilterSensitiveLog: (
  obj: ModifyIdentityIdFormatRequest
) => any;
export declare const ModifyIdFormatRequestFilterSensitiveLog: (
  obj: ModifyIdFormatRequest
) => any;
export declare const LaunchPermissionModificationsFilterSensitiveLog: (
  obj: LaunchPermissionModifications
) => any;
export declare const ModifyImageAttributeRequestFilterSensitiveLog: (
  obj: ModifyImageAttributeRequest
) => any;
export declare const EbsInstanceBlockDeviceSpecificationFilterSensitiveLog: (
  obj: EbsInstanceBlockDeviceSpecification
) => any;
export declare const InstanceBlockDeviceMappingSpecificationFilterSensitiveLog: (
  obj: InstanceBlockDeviceMappingSpecification
) => any;
export declare const BlobAttributeValueFilterSensitiveLog: (
  obj: BlobAttributeValue
) => any;
export declare const ModifyInstanceAttributeRequestFilterSensitiveLog: (
  obj: ModifyInstanceAttributeRequest
) => any;
export declare const CapacityReservationSpecificationFilterSensitiveLog: (
  obj: CapacityReservationSpecification
) => any;
export declare const ModifyInstanceCapacityReservationAttributesRequestFilterSensitiveLog: (
  obj: ModifyInstanceCapacityReservationAttributesRequest
) => any;
export declare const ModifyInstanceCapacityReservationAttributesResultFilterSensitiveLog: (
  obj: ModifyInstanceCapacityReservationAttributesResult
) => any;
export declare const InstanceCreditSpecificationRequestFilterSensitiveLog: (
  obj: InstanceCreditSpecificationRequest
) => any;
export declare const ModifyInstanceCreditSpecificationRequestFilterSensitiveLog: (
  obj: ModifyInstanceCreditSpecificationRequest
) => any;
export declare const SuccessfulInstanceCreditSpecificationItemFilterSensitiveLog: (
  obj: SuccessfulInstanceCreditSpecificationItem
) => any;
export declare const UnsuccessfulInstanceCreditSpecificationItemErrorFilterSensitiveLog: (
  obj: UnsuccessfulInstanceCreditSpecificationItemError
) => any;
export declare const UnsuccessfulInstanceCreditSpecificationItemFilterSensitiveLog: (
  obj: UnsuccessfulInstanceCreditSpecificationItem
) => any;
export declare const ModifyInstanceCreditSpecificationResultFilterSensitiveLog: (
  obj: ModifyInstanceCreditSpecificationResult
) => any;
export declare const ModifyInstanceEventStartTimeRequestFilterSensitiveLog: (
  obj: ModifyInstanceEventStartTimeRequest
) => any;
export declare const ModifyInstanceEventStartTimeResultFilterSensitiveLog: (
  obj: ModifyInstanceEventStartTimeResult
) => any;
export declare const ModifyInstanceEventWindowRequestFilterSensitiveLog: (
  obj: ModifyInstanceEventWindowRequest
) => any;
export declare const ModifyInstanceEventWindowResultFilterSensitiveLog: (
  obj: ModifyInstanceEventWindowResult
) => any;
export declare const ModifyInstanceMaintenanceOptionsRequestFilterSensitiveLog: (
  obj: ModifyInstanceMaintenanceOptionsRequest
) => any;
export declare const ModifyInstanceMaintenanceOptionsResultFilterSensitiveLog: (
  obj: ModifyInstanceMaintenanceOptionsResult
) => any;
export declare const ModifyInstanceMetadataOptionsRequestFilterSensitiveLog: (
  obj: ModifyInstanceMetadataOptionsRequest
) => any;
export declare const ModifyInstanceMetadataOptionsResultFilterSensitiveLog: (
  obj: ModifyInstanceMetadataOptionsResult
) => any;
export declare const ModifyInstancePlacementRequestFilterSensitiveLog: (
  obj: ModifyInstancePlacementRequest
) => any;
export declare const ModifyInstancePlacementResultFilterSensitiveLog: (
  obj: ModifyInstancePlacementResult
) => any;
export declare const RemoveIpamOperatingRegionFilterSensitiveLog: (
  obj: RemoveIpamOperatingRegion
) => any;
export declare const ModifyIpamRequestFilterSensitiveLog: (
  obj: ModifyIpamRequest
) => any;
export declare const ModifyIpamResultFilterSensitiveLog: (
  obj: ModifyIpamResult
) => any;
export declare const ModifyIpamPoolRequestFilterSensitiveLog: (
  obj: ModifyIpamPoolRequest
) => any;
export declare const ModifyIpamPoolResultFilterSensitiveLog: (
  obj: ModifyIpamPoolResult
) => any;
export declare const ModifyIpamResourceCidrRequestFilterSensitiveLog: (
  obj: ModifyIpamResourceCidrRequest
) => any;
export declare const ModifyIpamResourceCidrResultFilterSensitiveLog: (
  obj: ModifyIpamResourceCidrResult
) => any;
export declare const ModifyIpamScopeRequestFilterSensitiveLog: (
  obj: ModifyIpamScopeRequest
) => any;
export declare const ModifyIpamScopeResultFilterSensitiveLog: (
  obj: ModifyIpamScopeResult
) => any;
export declare const ModifyLaunchTemplateRequestFilterSensitiveLog: (
  obj: ModifyLaunchTemplateRequest
) => any;
export declare const ModifyLaunchTemplateResultFilterSensitiveLog: (
  obj: ModifyLaunchTemplateResult
) => any;
export declare const ModifyLocalGatewayRouteRequestFilterSensitiveLog: (
  obj: ModifyLocalGatewayRouteRequest
) => any;
export declare const ModifyLocalGatewayRouteResultFilterSensitiveLog: (
  obj: ModifyLocalGatewayRouteResult
) => any;
export declare const RemovePrefixListEntryFilterSensitiveLog: (
  obj: RemovePrefixListEntry
) => any;
export declare const ModifyManagedPrefixListRequestFilterSensitiveLog: (
  obj: ModifyManagedPrefixListRequest
) => any;
export declare const ModifyManagedPrefixListResultFilterSensitiveLog: (
  obj: ModifyManagedPrefixListResult
) => any;
export declare const NetworkInterfaceAttachmentChangesFilterSensitiveLog: (
  obj: NetworkInterfaceAttachmentChanges
) => any;
export declare const ModifyNetworkInterfaceAttributeRequestFilterSensitiveLog: (
  obj: ModifyNetworkInterfaceAttributeRequest
) => any;
export declare const ModifyPrivateDnsNameOptionsRequestFilterSensitiveLog: (
  obj: ModifyPrivateDnsNameOptionsRequest
) => any;
export declare const ModifyPrivateDnsNameOptionsResultFilterSensitiveLog: (
  obj: ModifyPrivateDnsNameOptionsResult
) => any;
export declare const ModifyReservedInstancesRequestFilterSensitiveLog: (
  obj: ModifyReservedInstancesRequest
) => any;
export declare const ModifyReservedInstancesResultFilterSensitiveLog: (
  obj: ModifyReservedInstancesResult
) => any;
export declare const SecurityGroupRuleRequestFilterSensitiveLog: (
  obj: SecurityGroupRuleRequest
) => any;
export declare const SecurityGroupRuleUpdateFilterSensitiveLog: (
  obj: SecurityGroupRuleUpdate
) => any;
export declare const ModifySecurityGroupRulesRequestFilterSensitiveLog: (
  obj: ModifySecurityGroupRulesRequest
) => any;
export declare const ModifySecurityGroupRulesResultFilterSensitiveLog: (
  obj: ModifySecurityGroupRulesResult
) => any;
export declare const CreateVolumePermissionModificationsFilterSensitiveLog: (
  obj: CreateVolumePermissionModifications
) => any;
export declare const ModifySnapshotAttributeRequestFilterSensitiveLog: (
  obj: ModifySnapshotAttributeRequest
) => any;
export declare const ModifySnapshotTierRequestFilterSensitiveLog: (
  obj: ModifySnapshotTierRequest
) => any;
export declare const ModifySnapshotTierResultFilterSensitiveLog: (
  obj: ModifySnapshotTierResult
) => any;
export declare const ModifySpotFleetRequestRequestFilterSensitiveLog: (
  obj: ModifySpotFleetRequestRequest
) => any;
export declare const ModifySpotFleetRequestResponseFilterSensitiveLog: (
  obj: ModifySpotFleetRequestResponse
) => any;
export declare const ModifySubnetAttributeRequestFilterSensitiveLog: (
  obj: ModifySubnetAttributeRequest
) => any;
export declare const ModifyTrafficMirrorFilterNetworkServicesRequestFilterSensitiveLog: (
  obj: ModifyTrafficMirrorFilterNetworkServicesRequest
) => any;
export declare const ModifyTrafficMirrorFilterNetworkServicesResultFilterSensitiveLog: (
  obj: ModifyTrafficMirrorFilterNetworkServicesResult
) => any;
export declare const ModifyTrafficMirrorFilterRuleRequestFilterSensitiveLog: (
  obj: ModifyTrafficMirrorFilterRuleRequest
) => any;
export declare const ModifyTrafficMirrorFilterRuleResultFilterSensitiveLog: (
  obj: ModifyTrafficMirrorFilterRuleResult
) => any;
export declare const ModifyTrafficMirrorSessionRequestFilterSensitiveLog: (
  obj: ModifyTrafficMirrorSessionRequest
) => any;
export declare const ModifyTrafficMirrorSessionResultFilterSensitiveLog: (
  obj: ModifyTrafficMirrorSessionResult
) => any;
export declare const ModifyTransitGatewayOptionsFilterSensitiveLog: (
  obj: ModifyTransitGatewayOptions
) => any;
export declare const ModifyTransitGatewayRequestFilterSensitiveLog: (
  obj: ModifyTransitGatewayRequest
) => any;
export declare const ModifyTransitGatewayResultFilterSensitiveLog: (
  obj: ModifyTransitGatewayResult
) => any;
export declare const ModifyTransitGatewayPrefixListReferenceRequestFilterSensitiveLog: (
  obj: ModifyTransitGatewayPrefixListReferenceRequest
) => any;
export declare const ModifyTransitGatewayPrefixListReferenceResultFilterSensitiveLog: (
  obj: ModifyTransitGatewayPrefixListReferenceResult
) => any;
export declare const ModifyTransitGatewayVpcAttachmentRequestOptionsFilterSensitiveLog: (
  obj: ModifyTransitGatewayVpcAttachmentRequestOptions
) => any;
export declare const ModifyTransitGatewayVpcAttachmentRequestFilterSensitiveLog: (
  obj: ModifyTransitGatewayVpcAttachmentRequest
) => any;
export declare const ModifyTransitGatewayVpcAttachmentResultFilterSensitiveLog: (
  obj: ModifyTransitGatewayVpcAttachmentResult
) => any;
export declare const ModifyVolumeRequestFilterSensitiveLog: (
  obj: ModifyVolumeRequest
) => any;
export declare const ModifyVolumeResultFilterSensitiveLog: (
  obj: ModifyVolumeResult
) => any;
export declare const ModifyVolumeAttributeRequestFilterSensitiveLog: (
  obj: ModifyVolumeAttributeRequest
) => any;
export declare const ModifyVpcAttributeRequestFilterSensitiveLog: (
  obj: ModifyVpcAttributeRequest
) => any;
export declare const ModifyVpcEndpointRequestFilterSensitiveLog: (
  obj: ModifyVpcEndpointRequest
) => any;
export declare const ModifyVpcEndpointResultFilterSensitiveLog: (
  obj: ModifyVpcEndpointResult
) => any;
export declare const ModifyVpcEndpointConnectionNotificationRequestFilterSensitiveLog: (
  obj: ModifyVpcEndpointConnectionNotificationRequest
) => any;
export declare const ModifyVpcEndpointConnectionNotificationResultFilterSensitiveLog: (
  obj: ModifyVpcEndpointConnectionNotificationResult
) => any;
export declare const ModifyVpcEndpointServiceConfigurationRequestFilterSensitiveLog: (
  obj: ModifyVpcEndpointServiceConfigurationRequest
) => any;
export declare const ModifyVpcEndpointServiceConfigurationResultFilterSensitiveLog: (
  obj: ModifyVpcEndpointServiceConfigurationResult
) => any;
export declare const ModifyVpcEndpointServicePayerResponsibilityRequestFilterSensitiveLog: (
  obj: ModifyVpcEndpointServicePayerResponsibilityRequest
) => any;
export declare const ModifyVpcEndpointServicePayerResponsibilityResultFilterSensitiveLog: (
  obj: ModifyVpcEndpointServicePayerResponsibilityResult
) => any;
export declare const ModifyVpcEndpointServicePermissionsRequestFilterSensitiveLog: (
  obj: ModifyVpcEndpointServicePermissionsRequest
) => any;
export declare const ModifyVpcEndpointServicePermissionsResultFilterSensitiveLog: (
  obj: ModifyVpcEndpointServicePermissionsResult
) => any;
export declare const PeeringConnectionOptionsRequestFilterSensitiveLog: (
  obj: PeeringConnectionOptionsRequest
) => any;
export declare const ModifyVpcPeeringConnectionOptionsRequestFilterSensitiveLog: (
  obj: ModifyVpcPeeringConnectionOptionsRequest
) => any;
export declare const PeeringConnectionOptionsFilterSensitiveLog: (
  obj: PeeringConnectionOptions
) => any;
export declare const ModifyVpcPeeringConnectionOptionsResultFilterSensitiveLog: (
  obj: ModifyVpcPeeringConnectionOptionsResult
) => any;
export declare const ModifyVpcTenancyRequestFilterSensitiveLog: (
  obj: ModifyVpcTenancyRequest
) => any;
export declare const ModifyVpcTenancyResultFilterSensitiveLog: (
  obj: ModifyVpcTenancyResult
) => any;
export declare const ModifyVpnConnectionRequestFilterSensitiveLog: (
  obj: ModifyVpnConnectionRequest
) => any;
export declare const ModifyVpnConnectionResultFilterSensitiveLog: (
  obj: ModifyVpnConnectionResult
) => any;
export declare const ModifyVpnConnectionOptionsRequestFilterSensitiveLog: (
  obj: ModifyVpnConnectionOptionsRequest
) => any;
export declare const ModifyVpnConnectionOptionsResultFilterSensitiveLog: (
  obj: ModifyVpnConnectionOptionsResult
) => any;
export declare const ModifyVpnTunnelCertificateRequestFilterSensitiveLog: (
  obj: ModifyVpnTunnelCertificateRequest
) => any;
export declare const ModifyVpnTunnelCertificateResultFilterSensitiveLog: (
  obj: ModifyVpnTunnelCertificateResult
) => any;
export declare const ModifyVpnTunnelOptionsSpecificationFilterSensitiveLog: (
  obj: ModifyVpnTunnelOptionsSpecification
) => any;
export declare const ModifyVpnTunnelOptionsRequestFilterSensitiveLog: (
  obj: ModifyVpnTunnelOptionsRequest
) => any;
export declare const ModifyVpnTunnelOptionsResultFilterSensitiveLog: (
  obj: ModifyVpnTunnelOptionsResult
) => any;

import {
  _InstanceType,
  ActiveInstance,
  ActivityStatus,
  AllocationStrategy,
  AllowedPrincipal,
  AlternatePathHint,
  AssociationStatus,
  BatchState,
  CurrencyCodeValues,
  Explanation,
  IamInstanceProfileAssociation,
  IamInstanceProfileSpecification,
  InstanceEventWindow,
  IpPermission,
  PathComponent,
  ReservedInstancesListing,
  ResourceType,
  SecurityGroupRule,
  Subnet,
  SubnetIpv6CidrBlockAssociation,
  Tag,
  TagSpecification,
  Tenancy,
  TransitGatewayAssociation,
  TransitGatewayAssociationState,
  TransitGatewayAttachmentResourceType,
  TransitGatewayAttachmentState,
  TransitGatewayMulticastDomainAssociations,
  TransitGatewayPeeringAttachment,
  TransitGatewayPolicyTableAssociation,
  TransitGatewayVpcAttachment,
  TrunkInterfaceAssociation,
  UserIdGroupPair,
  Vpc,
  VpcCidrBlockAssociation,
  VpcIpv6CidrBlockAssociation,
  VpcPeeringConnection,
} from "./models_0";
import {
  AttributeValue,
  BlockDeviceMapping,
  FleetLaunchTemplateSpecification,
  FleetType,
  GroupIdentifier,
  InstanceInterruptionBehavior,
  InstanceIpv6Address,
  InstanceRequirements,
  Ipv4PrefixSpecificationRequest,
  Ipv6PrefixSpecificationRequest,
  ManagedPrefixList,
  NatGateway,
  NetworkAcl,
  NetworkInsightsAccessScope,
  NetworkInsightsPath,
  NetworkInterface,
  NetworkInterfaceAttachment,
  NetworkInterfacePermission,
  PlacementGroup,
  PrivateIpAddressSpecification,
  ReplaceRootVolumeTask,
  RouteTable,
  Snapshot,
  SnapshotState,
  SpotDatafeedSubscription,
  SpotInstanceStateFault,
  SpotInstanceType,
  StorageTier,
  TargetCapacityUnitType,
  VolumeType,
} from "./models_1";
import {
  ConnectionNotification,
  DnsEntry,
  DnsNameState,
  IpAddressType,
  PayerResponsibility,
  ServiceConfiguration,
  ServiceConnectivityType,
  ServiceTypeDetail,
  State,
  TrafficMirrorFilter,
  TrafficMirrorSession,
  TrafficMirrorTarget,
  TransitGateway,
  TransitGatewayConnect,
  TransitGatewayConnectPeer,
  TransitGatewayMulticastDomain,
  TransitGatewayPolicyTable,
  TransitGatewayRouteTable,
  TransitGatewayRouteTableAnnouncement,
  Volume,
  VpcEndpoint,
  VpnConnection,
  VpnGateway,
} from "./models_2";
import {
  AttributeBooleanValue,
  EventInformation,
  FastLaunchLaunchTemplateSpecificationResponse,
  FastLaunchResourceType,
  FastLaunchSnapshotConfigurationResponse,
  FastLaunchStateCode,
  FastSnapshotRestoreStateCode,
  Filter,
  IdFormat,
  PermissionGroup,
  ProductCode,
} from "./models_3";
export interface LocalGateway {
  LocalGatewayId?: string;
  OutpostArn?: string;
  OwnerId?: string;
  State?: string;
  Tags?: Tag[];
}
export interface DescribeLocalGatewaysResult {
  LocalGateways?: LocalGateway[];
  NextToken?: string;
}
export interface DescribeLocalGatewayVirtualInterfaceGroupsRequest {
  LocalGatewayVirtualInterfaceGroupIds?: string[];
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
  DryRun?: boolean;
}
export interface LocalGatewayVirtualInterfaceGroup {
  LocalGatewayVirtualInterfaceGroupId?: string;
  LocalGatewayVirtualInterfaceIds?: string[];
  LocalGatewayId?: string;
  OwnerId?: string;
  Tags?: Tag[];
}
export interface DescribeLocalGatewayVirtualInterfaceGroupsResult {
  LocalGatewayVirtualInterfaceGroups?: LocalGatewayVirtualInterfaceGroup[];
  NextToken?: string;
}
export interface DescribeLocalGatewayVirtualInterfacesRequest {
  LocalGatewayVirtualInterfaceIds?: string[];
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
  DryRun?: boolean;
}
export interface LocalGatewayVirtualInterface {
  LocalGatewayVirtualInterfaceId?: string;
  LocalGatewayId?: string;
  Vlan?: number;
  LocalAddress?: string;
  PeerAddress?: string;
  LocalBgpAsn?: number;
  PeerBgpAsn?: number;
  OwnerId?: string;
  Tags?: Tag[];
}
export interface DescribeLocalGatewayVirtualInterfacesResult {
  LocalGatewayVirtualInterfaces?: LocalGatewayVirtualInterface[];
  NextToken?: string;
}
export interface DescribeManagedPrefixListsRequest {
  DryRun?: boolean;
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
  PrefixListIds?: string[];
}
export interface DescribeManagedPrefixListsResult {
  NextToken?: string;
  PrefixLists?: ManagedPrefixList[];
}
export interface DescribeMovingAddressesRequest {
  Filters?: Filter[];
  DryRun?: boolean;
  MaxResults?: number;
  NextToken?: string;
  PublicIps?: string[];
}
export declare enum MoveStatus {
  movingToVpc = "movingToVpc",
  restoringToClassic = "restoringToClassic",
}
export interface MovingAddressStatus {
  MoveStatus?: MoveStatus | string;
  PublicIp?: string;
}
export interface DescribeMovingAddressesResult {
  MovingAddressStatuses?: MovingAddressStatus[];
  NextToken?: string;
}
export interface DescribeNatGatewaysRequest {
  DryRun?: boolean;
  Filter?: Filter[];
  MaxResults?: number;
  NatGatewayIds?: string[];
  NextToken?: string;
}
export interface DescribeNatGatewaysResult {
  NatGateways?: NatGateway[];
  NextToken?: string;
}
export interface DescribeNetworkAclsRequest {
  Filters?: Filter[];
  DryRun?: boolean;
  NetworkAclIds?: string[];
  NextToken?: string;
  MaxResults?: number;
}
export interface DescribeNetworkAclsResult {
  NetworkAcls?: NetworkAcl[];
  NextToken?: string;
}
export interface DescribeNetworkInsightsAccessScopeAnalysesRequest {
  NetworkInsightsAccessScopeAnalysisIds?: string[];
  NetworkInsightsAccessScopeId?: string;
  AnalysisStartTimeBegin?: Date;
  AnalysisStartTimeEnd?: Date;
  Filters?: Filter[];
  MaxResults?: number;
  DryRun?: boolean;
  NextToken?: string;
}
export declare enum FindingsFound {
  false = "false",
  true = "true",
  unknown = "unknown",
}
export declare enum AnalysisStatus {
  failed = "failed",
  running = "running",
  succeeded = "succeeded",
}
export interface NetworkInsightsAccessScopeAnalysis {
  NetworkInsightsAccessScopeAnalysisId?: string;
  NetworkInsightsAccessScopeAnalysisArn?: string;
  NetworkInsightsAccessScopeId?: string;
  Status?: AnalysisStatus | string;
  StatusMessage?: string;
  WarningMessage?: string;
  StartDate?: Date;
  EndDate?: Date;
  FindingsFound?: FindingsFound | string;
  AnalyzedEniCount?: number;
  Tags?: Tag[];
}
export interface DescribeNetworkInsightsAccessScopeAnalysesResult {
  NetworkInsightsAccessScopeAnalyses?: NetworkInsightsAccessScopeAnalysis[];
  NextToken?: string;
}
export interface DescribeNetworkInsightsAccessScopesRequest {
  NetworkInsightsAccessScopeIds?: string[];
  Filters?: Filter[];
  MaxResults?: number;
  DryRun?: boolean;
  NextToken?: string;
}
export interface DescribeNetworkInsightsAccessScopesResult {
  NetworkInsightsAccessScopes?: NetworkInsightsAccessScope[];
  NextToken?: string;
}
export interface DescribeNetworkInsightsAnalysesRequest {
  NetworkInsightsAnalysisIds?: string[];
  NetworkInsightsPathId?: string;
  AnalysisStartTime?: Date;
  AnalysisEndTime?: Date;
  Filters?: Filter[];
  MaxResults?: number;
  DryRun?: boolean;
  NextToken?: string;
}
export interface NetworkInsightsAnalysis {
  NetworkInsightsAnalysisId?: string;
  NetworkInsightsAnalysisArn?: string;
  NetworkInsightsPathId?: string;
  FilterInArns?: string[];
  StartDate?: Date;
  Status?: AnalysisStatus | string;
  StatusMessage?: string;
  WarningMessage?: string;
  NetworkPathFound?: boolean;
  ForwardPathComponents?: PathComponent[];
  ReturnPathComponents?: PathComponent[];
  Explanations?: Explanation[];
  AlternatePathHints?: AlternatePathHint[];
  Tags?: Tag[];
}
export interface DescribeNetworkInsightsAnalysesResult {
  NetworkInsightsAnalyses?: NetworkInsightsAnalysis[];
  NextToken?: string;
}
export interface DescribeNetworkInsightsPathsRequest {
  NetworkInsightsPathIds?: string[];
  Filters?: Filter[];
  MaxResults?: number;
  DryRun?: boolean;
  NextToken?: string;
}
export interface DescribeNetworkInsightsPathsResult {
  NetworkInsightsPaths?: NetworkInsightsPath[];
  NextToken?: string;
}
export declare enum NetworkInterfaceAttribute {
  attachment = "attachment",
  description = "description",
  groupSet = "groupSet",
  sourceDestCheck = "sourceDestCheck",
}
export interface DescribeNetworkInterfaceAttributeRequest {
  Attribute?: NetworkInterfaceAttribute | string;
  DryRun?: boolean;
  NetworkInterfaceId: string | undefined;
}
export interface DescribeNetworkInterfaceAttributeResult {
  Attachment?: NetworkInterfaceAttachment;
  Description?: AttributeValue;
  Groups?: GroupIdentifier[];
  NetworkInterfaceId?: string;
  SourceDestCheck?: AttributeBooleanValue;
}
export interface DescribeNetworkInterfacePermissionsRequest {
  NetworkInterfacePermissionIds?: string[];
  Filters?: Filter[];
  NextToken?: string;
  MaxResults?: number;
}
export interface DescribeNetworkInterfacePermissionsResult {
  NetworkInterfacePermissions?: NetworkInterfacePermission[];
  NextToken?: string;
}
export interface DescribeNetworkInterfacesRequest {
  Filters?: Filter[];
  DryRun?: boolean;
  NetworkInterfaceIds?: string[];
  NextToken?: string;
  MaxResults?: number;
}
export interface DescribeNetworkInterfacesResult {
  NetworkInterfaces?: NetworkInterface[];
  NextToken?: string;
}
export interface DescribePlacementGroupsRequest {
  Filters?: Filter[];
  DryRun?: boolean;
  GroupNames?: string[];
  GroupIds?: string[];
}
export interface DescribePlacementGroupsResult {
  PlacementGroups?: PlacementGroup[];
}
export interface DescribePrefixListsRequest {
  DryRun?: boolean;
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
  PrefixListIds?: string[];
}
export interface PrefixList {
  Cidrs?: string[];
  PrefixListId?: string;
  PrefixListName?: string;
}
export interface DescribePrefixListsResult {
  NextToken?: string;
  PrefixLists?: PrefixList[];
}
export interface DescribePrincipalIdFormatRequest {
  DryRun?: boolean;
  Resources?: string[];
  MaxResults?: number;
  NextToken?: string;
}
export interface PrincipalIdFormat {
  Arn?: string;
  Statuses?: IdFormat[];
}
export interface DescribePrincipalIdFormatResult {
  Principals?: PrincipalIdFormat[];
  NextToken?: string;
}
export interface DescribePublicIpv4PoolsRequest {
  PoolIds?: string[];
  NextToken?: string;
  MaxResults?: number;
  Filters?: Filter[];
}
export interface PublicIpv4PoolRange {
  FirstAddress?: string;
  LastAddress?: string;
  AddressCount?: number;
  AvailableAddressCount?: number;
}
export interface PublicIpv4Pool {
  PoolId?: string;
  Description?: string;
  PoolAddressRanges?: PublicIpv4PoolRange[];
  TotalAddressCount?: number;
  TotalAvailableAddressCount?: number;
  NetworkBorderGroup?: string;
  Tags?: Tag[];
}
export interface DescribePublicIpv4PoolsResult {
  PublicIpv4Pools?: PublicIpv4Pool[];
  NextToken?: string;
}
export interface DescribeRegionsRequest {
  Filters?: Filter[];
  RegionNames?: string[];
  DryRun?: boolean;
  AllRegions?: boolean;
}
export interface Region {
  Endpoint?: string;
  RegionName?: string;
  OptInStatus?: string;
}
export interface DescribeRegionsResult {
  Regions?: Region[];
}
export interface DescribeReplaceRootVolumeTasksRequest {
  ReplaceRootVolumeTaskIds?: string[];
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
  DryRun?: boolean;
}
export interface DescribeReplaceRootVolumeTasksResult {
  ReplaceRootVolumeTasks?: ReplaceRootVolumeTask[];
  NextToken?: string;
}
export declare enum OfferingClassType {
  CONVERTIBLE = "convertible",
  STANDARD = "standard",
}
export declare enum OfferingTypeValues {
  All_Upfront = "All Upfront",
  Heavy_Utilization = "Heavy Utilization",
  Light_Utilization = "Light Utilization",
  Medium_Utilization = "Medium Utilization",
  No_Upfront = "No Upfront",
  Partial_Upfront = "Partial Upfront",
}
export interface DescribeReservedInstancesRequest {
  Filters?: Filter[];
  OfferingClass?: OfferingClassType | string;
  ReservedInstancesIds?: string[];
  DryRun?: boolean;
  OfferingType?: OfferingTypeValues | string;
}
export declare type RIProductDescription =
  | "Linux/UNIX"
  | "Linux/UNIX (Amazon VPC)"
  | "Windows"
  | "Windows (Amazon VPC)";
export declare enum RecurringChargeFrequency {
  Hourly = "Hourly",
}
export interface RecurringCharge {
  Amount?: number;
  Frequency?: RecurringChargeFrequency | string;
}
export declare enum Scope {
  AVAILABILITY_ZONE = "Availability Zone",
  REGIONAL = "Region",
}
export declare enum ReservedInstanceState {
  active = "active",
  payment_failed = "payment-failed",
  payment_pending = "payment-pending",
  queued = "queued",
  queued_deleted = "queued-deleted",
  retired = "retired",
}
export interface ReservedInstances {
  AvailabilityZone?: string;
  Duration?: number;
  End?: Date;
  FixedPrice?: number;
  InstanceCount?: number;
  InstanceType?: _InstanceType | string;
  ProductDescription?: RIProductDescription | string;
  ReservedInstancesId?: string;
  Start?: Date;
  State?: ReservedInstanceState | string;
  UsagePrice?: number;
  CurrencyCode?: CurrencyCodeValues | string;
  InstanceTenancy?: Tenancy | string;
  OfferingClass?: OfferingClassType | string;
  OfferingType?: OfferingTypeValues | string;
  RecurringCharges?: RecurringCharge[];
  Scope?: Scope | string;
  Tags?: Tag[];
}
export interface DescribeReservedInstancesResult {
  ReservedInstances?: ReservedInstances[];
}
export interface DescribeReservedInstancesListingsRequest {
  Filters?: Filter[];
  ReservedInstancesId?: string;
  ReservedInstancesListingId?: string;
}
export interface DescribeReservedInstancesListingsResult {
  ReservedInstancesListings?: ReservedInstancesListing[];
}
export interface DescribeReservedInstancesModificationsRequest {
  Filters?: Filter[];
  ReservedInstancesModificationIds?: string[];
  NextToken?: string;
}
export interface ReservedInstancesConfiguration {
  AvailabilityZone?: string;
  InstanceCount?: number;
  InstanceType?: _InstanceType | string;
  Platform?: string;
  Scope?: Scope | string;
}
export interface ReservedInstancesModificationResult {
  ReservedInstancesId?: string;
  TargetConfiguration?: ReservedInstancesConfiguration;
}
export interface ReservedInstancesId {
  ReservedInstancesId?: string;
}
export interface ReservedInstancesModification {
  ClientToken?: string;
  CreateDate?: Date;
  EffectiveDate?: Date;
  ModificationResults?: ReservedInstancesModificationResult[];
  ReservedInstancesIds?: ReservedInstancesId[];
  ReservedInstancesModificationId?: string;
  Status?: string;
  StatusMessage?: string;
  UpdateDate?: Date;
}
export interface DescribeReservedInstancesModificationsResult {
  NextToken?: string;
  ReservedInstancesModifications?: ReservedInstancesModification[];
}
export interface DescribeReservedInstancesOfferingsRequest {
  AvailabilityZone?: string;
  Filters?: Filter[];
  IncludeMarketplace?: boolean;
  InstanceType?: _InstanceType | string;
  MaxDuration?: number;
  MaxInstanceCount?: number;
  MinDuration?: number;
  OfferingClass?: OfferingClassType | string;
  ProductDescription?: RIProductDescription | string;
  ReservedInstancesOfferingIds?: string[];
  DryRun?: boolean;
  InstanceTenancy?: Tenancy | string;
  MaxResults?: number;
  NextToken?: string;
  OfferingType?: OfferingTypeValues | string;
}
export interface PricingDetail {
  Count?: number;
  Price?: number;
}
export interface ReservedInstancesOffering {
  AvailabilityZone?: string;
  Duration?: number;
  FixedPrice?: number;
  InstanceType?: _InstanceType | string;
  ProductDescription?: RIProductDescription | string;
  ReservedInstancesOfferingId?: string;
  UsagePrice?: number;
  CurrencyCode?: CurrencyCodeValues | string;
  InstanceTenancy?: Tenancy | string;
  Marketplace?: boolean;
  OfferingClass?: OfferingClassType | string;
  OfferingType?: OfferingTypeValues | string;
  PricingDetails?: PricingDetail[];
  RecurringCharges?: RecurringCharge[];
  Scope?: Scope | string;
}
export interface DescribeReservedInstancesOfferingsResult {
  ReservedInstancesOfferings?: ReservedInstancesOffering[];
  NextToken?: string;
}
export interface DescribeRouteTablesRequest {
  Filters?: Filter[];
  DryRun?: boolean;
  RouteTableIds?: string[];
  NextToken?: string;
  MaxResults?: number;
}
export interface DescribeRouteTablesResult {
  RouteTables?: RouteTable[];
  NextToken?: string;
}
export interface SlotDateTimeRangeRequest {
  EarliestTime: Date | undefined;
  LatestTime: Date | undefined;
}
export interface ScheduledInstanceRecurrenceRequest {
  Frequency?: string;
  Interval?: number;
  OccurrenceDays?: number[];
  OccurrenceRelativeToEnd?: boolean;
  OccurrenceUnit?: string;
}
export interface DescribeScheduledInstanceAvailabilityRequest {
  DryRun?: boolean;
  Filters?: Filter[];
  FirstSlotStartTimeRange: SlotDateTimeRangeRequest | undefined;
  MaxResults?: number;
  MaxSlotDurationInHours?: number;
  MinSlotDurationInHours?: number;
  NextToken?: string;
  Recurrence: ScheduledInstanceRecurrenceRequest | undefined;
}
export interface ScheduledInstanceRecurrence {
  Frequency?: string;
  Interval?: number;
  OccurrenceDaySet?: number[];
  OccurrenceRelativeToEnd?: boolean;
  OccurrenceUnit?: string;
}
export interface ScheduledInstanceAvailability {
  AvailabilityZone?: string;
  AvailableInstanceCount?: number;
  FirstSlotStartTime?: Date;
  HourlyPrice?: string;
  InstanceType?: string;
  MaxTermDurationInDays?: number;
  MinTermDurationInDays?: number;
  NetworkPlatform?: string;
  Platform?: string;
  PurchaseToken?: string;
  Recurrence?: ScheduledInstanceRecurrence;
  SlotDurationInHours?: number;
  TotalScheduledInstanceHours?: number;
}
export interface DescribeScheduledInstanceAvailabilityResult {
  NextToken?: string;
  ScheduledInstanceAvailabilitySet?: ScheduledInstanceAvailability[];
}
export interface SlotStartTimeRangeRequest {
  EarliestTime?: Date;
  LatestTime?: Date;
}
export interface DescribeScheduledInstancesRequest {
  DryRun?: boolean;
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
  ScheduledInstanceIds?: string[];
  SlotStartTimeRange?: SlotStartTimeRangeRequest;
}
export interface ScheduledInstance {
  AvailabilityZone?: string;
  CreateDate?: Date;
  HourlyPrice?: string;
  InstanceCount?: number;
  InstanceType?: string;
  NetworkPlatform?: string;
  NextSlotStartTime?: Date;
  Platform?: string;
  PreviousSlotEndTime?: Date;
  Recurrence?: ScheduledInstanceRecurrence;
  ScheduledInstanceId?: string;
  SlotDurationInHours?: number;
  TermEndDate?: Date;
  TermStartDate?: Date;
  TotalScheduledInstanceHours?: number;
}
export interface DescribeScheduledInstancesResult {
  NextToken?: string;
  ScheduledInstanceSet?: ScheduledInstance[];
}
export interface DescribeSecurityGroupReferencesRequest {
  DryRun?: boolean;
  GroupId: string[] | undefined;
}
export interface SecurityGroupReference {
  GroupId?: string;
  ReferencingVpcId?: string;
  VpcPeeringConnectionId?: string;
}
export interface DescribeSecurityGroupReferencesResult {
  SecurityGroupReferenceSet?: SecurityGroupReference[];
}
export interface DescribeSecurityGroupRulesRequest {
  Filters?: Filter[];
  SecurityGroupRuleIds?: string[];
  DryRun?: boolean;
  NextToken?: string;
  MaxResults?: number;
}
export interface DescribeSecurityGroupRulesResult {
  SecurityGroupRules?: SecurityGroupRule[];
  NextToken?: string;
}
export interface DescribeSecurityGroupsRequest {
  Filters?: Filter[];
  GroupIds?: string[];
  GroupNames?: string[];
  DryRun?: boolean;
  NextToken?: string;
  MaxResults?: number;
}
export interface SecurityGroup {
  Description?: string;
  GroupName?: string;
  IpPermissions?: IpPermission[];
  OwnerId?: string;
  GroupId?: string;
  IpPermissionsEgress?: IpPermission[];
  Tags?: Tag[];
  VpcId?: string;
}
export interface DescribeSecurityGroupsResult {
  SecurityGroups?: SecurityGroup[];
  NextToken?: string;
}
export declare enum SnapshotAttributeName {
  createVolumePermission = "createVolumePermission",
  productCodes = "productCodes",
}
export interface DescribeSnapshotAttributeRequest {
  Attribute: SnapshotAttributeName | string | undefined;
  SnapshotId: string | undefined;
  DryRun?: boolean;
}
export interface CreateVolumePermission {
  Group?: PermissionGroup | string;
  UserId?: string;
}
export interface DescribeSnapshotAttributeResult {
  CreateVolumePermissions?: CreateVolumePermission[];
  ProductCodes?: ProductCode[];
  SnapshotId?: string;
}
export interface DescribeSnapshotsRequest {
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
  OwnerIds?: string[];
  RestorableByUserIds?: string[];
  SnapshotIds?: string[];
  DryRun?: boolean;
}
export interface DescribeSnapshotsResult {
  Snapshots?: Snapshot[];
  NextToken?: string;
}
export interface DescribeSnapshotTierStatusRequest {
  Filters?: Filter[];
  DryRun?: boolean;
  NextToken?: string;
  MaxResults?: number;
}
export declare enum TieringOperationStatus {
  archival_completed = "archival-completed",
  archival_failed = "archival-failed",
  archival_in_progress = "archival-in-progress",
  permanent_restore_completed = "permanent-restore-completed",
  permanent_restore_failed = "permanent-restore-failed",
  permanent_restore_in_progress = "permanent-restore-in-progress",
  temporary_restore_completed = "temporary-restore-completed",
  temporary_restore_failed = "temporary-restore-failed",
  temporary_restore_in_progress = "temporary-restore-in-progress",
}
export interface SnapshotTierStatus {
  SnapshotId?: string;
  VolumeId?: string;
  Status?: SnapshotState | string;
  OwnerId?: string;
  Tags?: Tag[];
  StorageTier?: StorageTier | string;
  LastTieringStartTime?: Date;
  LastTieringProgress?: number;
  LastTieringOperationStatus?: TieringOperationStatus | string;
  LastTieringOperationStatusDetail?: string;
  ArchivalCompleteTime?: Date;
  RestoreExpiryTime?: Date;
}
export interface DescribeSnapshotTierStatusResult {
  SnapshotTierStatuses?: SnapshotTierStatus[];
  NextToken?: string;
}
export interface DescribeSpotDatafeedSubscriptionRequest {
  DryRun?: boolean;
}
export interface DescribeSpotDatafeedSubscriptionResult {
  SpotDatafeedSubscription?: SpotDatafeedSubscription;
}
export interface DescribeSpotFleetInstancesRequest {
  DryRun?: boolean;
  MaxResults?: number;
  NextToken?: string;
  SpotFleetRequestId: string | undefined;
}
export interface DescribeSpotFleetInstancesResponse {
  ActiveInstances?: ActiveInstance[];
  NextToken?: string;
  SpotFleetRequestId?: string;
}
export declare enum EventType {
  BATCH_CHANGE = "fleetRequestChange",
  ERROR = "error",
  INFORMATION = "information",
  INSTANCE_CHANGE = "instanceChange",
}
export interface DescribeSpotFleetRequestHistoryRequest {
  DryRun?: boolean;
  EventType?: EventType | string;
  MaxResults?: number;
  NextToken?: string;
  SpotFleetRequestId: string | undefined;
  StartTime: Date | undefined;
}
export interface HistoryRecord {
  EventInformation?: EventInformation;
  EventType?: EventType | string;
  Timestamp?: Date;
}
export interface DescribeSpotFleetRequestHistoryResponse {
  HistoryRecords?: HistoryRecord[];
  LastEvaluatedTime?: Date;
  NextToken?: string;
  SpotFleetRequestId?: string;
  StartTime?: Date;
}
export interface DescribeSpotFleetRequestsRequest {
  DryRun?: boolean;
  MaxResults?: number;
  NextToken?: string;
  SpotFleetRequestIds?: string[];
}
export declare enum ExcessCapacityTerminationPolicy {
  DEFAULT = "default",
  NO_TERMINATION = "noTermination",
}
export interface SpotFleetMonitoring {
  Enabled?: boolean;
}
export interface InstanceNetworkInterfaceSpecification {
  AssociatePublicIpAddress?: boolean;
  DeleteOnTermination?: boolean;
  Description?: string;
  DeviceIndex?: number;
  Groups?: string[];
  Ipv6AddressCount?: number;
  Ipv6Addresses?: InstanceIpv6Address[];
  NetworkInterfaceId?: string;
  PrivateIpAddress?: string;
  PrivateIpAddresses?: PrivateIpAddressSpecification[];
  SecondaryPrivateIpAddressCount?: number;
  SubnetId?: string;
  AssociateCarrierIpAddress?: boolean;
  InterfaceType?: string;
  NetworkCardIndex?: number;
  Ipv4Prefixes?: Ipv4PrefixSpecificationRequest[];
  Ipv4PrefixCount?: number;
  Ipv6Prefixes?: Ipv6PrefixSpecificationRequest[];
  Ipv6PrefixCount?: number;
}
export interface SpotPlacement {
  AvailabilityZone?: string;
  GroupName?: string;
  Tenancy?: Tenancy | string;
}
export interface SpotFleetTagSpecification {
  ResourceType?: ResourceType | string;
  Tags?: Tag[];
}
export interface SpotFleetLaunchSpecification {
  SecurityGroups?: GroupIdentifier[];
  AddressingType?: string;
  BlockDeviceMappings?: BlockDeviceMapping[];
  EbsOptimized?: boolean;
  IamInstanceProfile?: IamInstanceProfileSpecification;
  ImageId?: string;
  InstanceType?: _InstanceType | string;
  KernelId?: string;
  KeyName?: string;
  Monitoring?: SpotFleetMonitoring;
  NetworkInterfaces?: InstanceNetworkInterfaceSpecification[];
  Placement?: SpotPlacement;
  RamdiskId?: string;
  SpotPrice?: string;
  SubnetId?: string;
  UserData?: string;
  WeightedCapacity?: number;
  TagSpecifications?: SpotFleetTagSpecification[];
  InstanceRequirements?: InstanceRequirements;
}
export interface LaunchTemplateOverrides {
  InstanceType?: _InstanceType | string;
  SpotPrice?: string;
  SubnetId?: string;
  AvailabilityZone?: string;
  WeightedCapacity?: number;
  Priority?: number;
  InstanceRequirements?: InstanceRequirements;
}
export interface LaunchTemplateConfig {
  LaunchTemplateSpecification?: FleetLaunchTemplateSpecification;
  Overrides?: LaunchTemplateOverrides[];
}
export interface ClassicLoadBalancer {
  Name?: string;
}
export interface ClassicLoadBalancersConfig {
  ClassicLoadBalancers?: ClassicLoadBalancer[];
}
export interface TargetGroup {
  Arn?: string;
}
export interface TargetGroupsConfig {
  TargetGroups?: TargetGroup[];
}
export interface LoadBalancersConfig {
  ClassicLoadBalancersConfig?: ClassicLoadBalancersConfig;
  TargetGroupsConfig?: TargetGroupsConfig;
}
export declare enum OnDemandAllocationStrategy {
  LOWEST_PRICE = "lowestPrice",
  PRIORITIZED = "prioritized",
}
export declare enum ReplacementStrategy {
  LAUNCH = "launch",
  LAUNCH_BEFORE_TERMINATE = "launch-before-terminate",
}
export interface SpotCapacityRebalance {
  ReplacementStrategy?: ReplacementStrategy | string;
  TerminationDelay?: number;
}
export interface SpotMaintenanceStrategies {
  CapacityRebalance?: SpotCapacityRebalance;
}
export interface SpotFleetRequestConfigData {
  AllocationStrategy?: AllocationStrategy | string;
  OnDemandAllocationStrategy?: OnDemandAllocationStrategy | string;
  SpotMaintenanceStrategies?: SpotMaintenanceStrategies;
  ClientToken?: string;
  ExcessCapacityTerminationPolicy?: ExcessCapacityTerminationPolicy | string;
  FulfilledCapacity?: number;
  OnDemandFulfilledCapacity?: number;
  IamFleetRole: string | undefined;
  LaunchSpecifications?: SpotFleetLaunchSpecification[];
  LaunchTemplateConfigs?: LaunchTemplateConfig[];
  SpotPrice?: string;
  TargetCapacity: number | undefined;
  OnDemandTargetCapacity?: number;
  OnDemandMaxTotalPrice?: string;
  SpotMaxTotalPrice?: string;
  TerminateInstancesWithExpiration?: boolean;
  Type?: FleetType | string;
  ValidFrom?: Date;
  ValidUntil?: Date;
  ReplaceUnhealthyInstances?: boolean;
  InstanceInterruptionBehavior?: InstanceInterruptionBehavior | string;
  LoadBalancersConfig?: LoadBalancersConfig;
  InstancePoolsToUseCount?: number;
  Context?: string;
  TargetCapacityUnitType?: TargetCapacityUnitType | string;
  TagSpecifications?: TagSpecification[];
}
export interface SpotFleetRequestConfig {
  ActivityStatus?: ActivityStatus | string;
  CreateTime?: Date;
  SpotFleetRequestConfig?: SpotFleetRequestConfigData;
  SpotFleetRequestId?: string;
  SpotFleetRequestState?: BatchState | string;
  Tags?: Tag[];
}
export interface DescribeSpotFleetRequestsResponse {
  NextToken?: string;
  SpotFleetRequestConfigs?: SpotFleetRequestConfig[];
}
export interface DescribeSpotInstanceRequestsRequest {
  Filters?: Filter[];
  DryRun?: boolean;
  SpotInstanceRequestIds?: string[];
  NextToken?: string;
  MaxResults?: number;
}
export interface RunInstancesMonitoringEnabled {
  Enabled: boolean | undefined;
}
export interface LaunchSpecification {
  UserData?: string;
  SecurityGroups?: GroupIdentifier[];
  AddressingType?: string;
  BlockDeviceMappings?: BlockDeviceMapping[];
  EbsOptimized?: boolean;
  IamInstanceProfile?: IamInstanceProfileSpecification;
  ImageId?: string;
  InstanceType?: _InstanceType | string;
  KernelId?: string;
  KeyName?: string;
  NetworkInterfaces?: InstanceNetworkInterfaceSpecification[];
  Placement?: SpotPlacement;
  RamdiskId?: string;
  SubnetId?: string;
  Monitoring?: RunInstancesMonitoringEnabled;
}
export declare enum SpotInstanceState {
  active = "active",
  cancelled = "cancelled",
  closed = "closed",
  failed = "failed",
  open = "open",
}
export interface SpotInstanceStatus {
  Code?: string;
  Message?: string;
  UpdateTime?: Date;
}
export interface SpotInstanceRequest {
  ActualBlockHourlyPrice?: string;
  AvailabilityZoneGroup?: string;
  BlockDurationMinutes?: number;
  CreateTime?: Date;
  Fault?: SpotInstanceStateFault;
  InstanceId?: string;
  LaunchGroup?: string;
  LaunchSpecification?: LaunchSpecification;
  LaunchedAvailabilityZone?: string;
  ProductDescription?: RIProductDescription | string;
  SpotInstanceRequestId?: string;
  SpotPrice?: string;
  State?: SpotInstanceState | string;
  Status?: SpotInstanceStatus;
  Tags?: Tag[];
  Type?: SpotInstanceType | string;
  ValidFrom?: Date;
  ValidUntil?: Date;
  InstanceInterruptionBehavior?: InstanceInterruptionBehavior | string;
}
export interface DescribeSpotInstanceRequestsResult {
  SpotInstanceRequests?: SpotInstanceRequest[];
  NextToken?: string;
}
export interface DescribeSpotPriceHistoryRequest {
  Filters?: Filter[];
  AvailabilityZone?: string;
  DryRun?: boolean;
  EndTime?: Date;
  InstanceTypes?: (_InstanceType | string)[];
  MaxResults?: number;
  NextToken?: string;
  ProductDescriptions?: string[];
  StartTime?: Date;
}
export interface SpotPrice {
  AvailabilityZone?: string;
  InstanceType?: _InstanceType | string;
  ProductDescription?: RIProductDescription | string;
  SpotPrice?: string;
  Timestamp?: Date;
}
export interface DescribeSpotPriceHistoryResult {
  NextToken?: string;
  SpotPriceHistory?: SpotPrice[];
}
export interface DescribeStaleSecurityGroupsRequest {
  DryRun?: boolean;
  MaxResults?: number;
  NextToken?: string;
  VpcId: string | undefined;
}
export interface StaleIpPermission {
  FromPort?: number;
  IpProtocol?: string;
  IpRanges?: string[];
  PrefixListIds?: string[];
  ToPort?: number;
  UserIdGroupPairs?: UserIdGroupPair[];
}
export interface StaleSecurityGroup {
  Description?: string;
  GroupId?: string;
  GroupName?: string;
  StaleIpPermissions?: StaleIpPermission[];
  StaleIpPermissionsEgress?: StaleIpPermission[];
  VpcId?: string;
}
export interface DescribeStaleSecurityGroupsResult {
  NextToken?: string;
  StaleSecurityGroupSet?: StaleSecurityGroup[];
}
export interface DescribeStoreImageTasksRequest {
  ImageIds?: string[];
  DryRun?: boolean;
  Filters?: Filter[];
  NextToken?: string;
  MaxResults?: number;
}
export interface StoreImageTaskResult {
  AmiId?: string;
  TaskStartTime?: Date;
  Bucket?: string;
  S3objectKey?: string;
  ProgressPercentage?: number;
  StoreTaskState?: string;
  StoreTaskFailureReason?: string;
}
export interface DescribeStoreImageTasksResult {
  StoreImageTaskResults?: StoreImageTaskResult[];
  NextToken?: string;
}
export interface DescribeSubnetsRequest {
  Filters?: Filter[];
  SubnetIds?: string[];
  DryRun?: boolean;
  NextToken?: string;
  MaxResults?: number;
}
export interface DescribeSubnetsResult {
  Subnets?: Subnet[];
  NextToken?: string;
}
export interface DescribeTagsRequest {
  DryRun?: boolean;
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
}
export interface TagDescription {
  Key?: string;
  ResourceId?: string;
  ResourceType?: ResourceType | string;
  Value?: string;
}
export interface DescribeTagsResult {
  NextToken?: string;
  Tags?: TagDescription[];
}
export interface DescribeTrafficMirrorFiltersRequest {
  TrafficMirrorFilterIds?: string[];
  DryRun?: boolean;
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
}
export interface DescribeTrafficMirrorFiltersResult {
  TrafficMirrorFilters?: TrafficMirrorFilter[];
  NextToken?: string;
}
export interface DescribeTrafficMirrorSessionsRequest {
  TrafficMirrorSessionIds?: string[];
  DryRun?: boolean;
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
}
export interface DescribeTrafficMirrorSessionsResult {
  TrafficMirrorSessions?: TrafficMirrorSession[];
  NextToken?: string;
}
export interface DescribeTrafficMirrorTargetsRequest {
  TrafficMirrorTargetIds?: string[];
  DryRun?: boolean;
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
}
export interface DescribeTrafficMirrorTargetsResult {
  TrafficMirrorTargets?: TrafficMirrorTarget[];
  NextToken?: string;
}
export interface DescribeTransitGatewayAttachmentsRequest {
  TransitGatewayAttachmentIds?: string[];
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
  DryRun?: boolean;
}
export interface TransitGatewayAttachmentAssociation {
  TransitGatewayRouteTableId?: string;
  State?: TransitGatewayAssociationState | string;
}
export interface TransitGatewayAttachment {
  TransitGatewayAttachmentId?: string;
  TransitGatewayId?: string;
  TransitGatewayOwnerId?: string;
  ResourceOwnerId?: string;
  ResourceType?: TransitGatewayAttachmentResourceType | string;
  ResourceId?: string;
  State?: TransitGatewayAttachmentState | string;
  Association?: TransitGatewayAttachmentAssociation;
  CreationTime?: Date;
  Tags?: Tag[];
}
export interface DescribeTransitGatewayAttachmentsResult {
  TransitGatewayAttachments?: TransitGatewayAttachment[];
  NextToken?: string;
}
export interface DescribeTransitGatewayConnectPeersRequest {
  TransitGatewayConnectPeerIds?: string[];
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
  DryRun?: boolean;
}
export interface DescribeTransitGatewayConnectPeersResult {
  TransitGatewayConnectPeers?: TransitGatewayConnectPeer[];
  NextToken?: string;
}
export interface DescribeTransitGatewayConnectsRequest {
  TransitGatewayAttachmentIds?: string[];
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
  DryRun?: boolean;
}
export interface DescribeTransitGatewayConnectsResult {
  TransitGatewayConnects?: TransitGatewayConnect[];
  NextToken?: string;
}
export interface DescribeTransitGatewayMulticastDomainsRequest {
  TransitGatewayMulticastDomainIds?: string[];
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
  DryRun?: boolean;
}
export interface DescribeTransitGatewayMulticastDomainsResult {
  TransitGatewayMulticastDomains?: TransitGatewayMulticastDomain[];
  NextToken?: string;
}
export interface DescribeTransitGatewayPeeringAttachmentsRequest {
  TransitGatewayAttachmentIds?: string[];
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
  DryRun?: boolean;
}
export interface DescribeTransitGatewayPeeringAttachmentsResult {
  TransitGatewayPeeringAttachments?: TransitGatewayPeeringAttachment[];
  NextToken?: string;
}
export interface DescribeTransitGatewayPolicyTablesRequest {
  TransitGatewayPolicyTableIds?: string[];
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
  DryRun?: boolean;
}
export interface DescribeTransitGatewayPolicyTablesResult {
  TransitGatewayPolicyTables?: TransitGatewayPolicyTable[];
  NextToken?: string;
}
export interface DescribeTransitGatewayRouteTableAnnouncementsRequest {
  TransitGatewayRouteTableAnnouncementIds?: string[];
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
  DryRun?: boolean;
}
export interface DescribeTransitGatewayRouteTableAnnouncementsResult {
  TransitGatewayRouteTableAnnouncements?: TransitGatewayRouteTableAnnouncement[];
  NextToken?: string;
}
export interface DescribeTransitGatewayRouteTablesRequest {
  TransitGatewayRouteTableIds?: string[];
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
  DryRun?: boolean;
}
export interface DescribeTransitGatewayRouteTablesResult {
  TransitGatewayRouteTables?: TransitGatewayRouteTable[];
  NextToken?: string;
}
export interface DescribeTransitGatewaysRequest {
  TransitGatewayIds?: string[];
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
  DryRun?: boolean;
}
export interface DescribeTransitGatewaysResult {
  TransitGateways?: TransitGateway[];
  NextToken?: string;
}
export interface DescribeTransitGatewayVpcAttachmentsRequest {
  TransitGatewayAttachmentIds?: string[];
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
  DryRun?: boolean;
}
export interface DescribeTransitGatewayVpcAttachmentsResult {
  TransitGatewayVpcAttachments?: TransitGatewayVpcAttachment[];
  NextToken?: string;
}
export interface DescribeTrunkInterfaceAssociationsRequest {
  AssociationIds?: string[];
  DryRun?: boolean;
  Filters?: Filter[];
  NextToken?: string;
  MaxResults?: number;
}
export interface DescribeTrunkInterfaceAssociationsResult {
  InterfaceAssociations?: TrunkInterfaceAssociation[];
  NextToken?: string;
}
export declare enum VolumeAttributeName {
  autoEnableIO = "autoEnableIO",
  productCodes = "productCodes",
}
export interface DescribeVolumeAttributeRequest {
  Attribute: VolumeAttributeName | string | undefined;
  VolumeId: string | undefined;
  DryRun?: boolean;
}
export interface DescribeVolumeAttributeResult {
  AutoEnableIO?: AttributeBooleanValue;
  ProductCodes?: ProductCode[];
  VolumeId?: string;
}
export interface DescribeVolumesRequest {
  Filters?: Filter[];
  VolumeIds?: string[];
  DryRun?: boolean;
  MaxResults?: number;
  NextToken?: string;
}
export interface DescribeVolumesResult {
  Volumes?: Volume[];
  NextToken?: string;
}
export interface DescribeVolumesModificationsRequest {
  DryRun?: boolean;
  VolumeIds?: string[];
  Filters?: Filter[];
  NextToken?: string;
  MaxResults?: number;
}
export declare enum VolumeModificationState {
  completed = "completed",
  failed = "failed",
  modifying = "modifying",
  optimizing = "optimizing",
}
export interface VolumeModification {
  VolumeId?: string;
  ModificationState?: VolumeModificationState | string;
  StatusMessage?: string;
  TargetSize?: number;
  TargetIops?: number;
  TargetVolumeType?: VolumeType | string;
  TargetThroughput?: number;
  TargetMultiAttachEnabled?: boolean;
  OriginalSize?: number;
  OriginalIops?: number;
  OriginalVolumeType?: VolumeType | string;
  OriginalThroughput?: number;
  OriginalMultiAttachEnabled?: boolean;
  Progress?: number;
  StartTime?: Date;
  EndTime?: Date;
}
export interface DescribeVolumesModificationsResult {
  VolumesModifications?: VolumeModification[];
  NextToken?: string;
}
export interface DescribeVolumeStatusRequest {
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
  VolumeIds?: string[];
  DryRun?: boolean;
}
export interface VolumeStatusAction {
  Code?: string;
  Description?: string;
  EventId?: string;
  EventType?: string;
}
export interface VolumeStatusAttachmentStatus {
  IoPerformance?: string;
  InstanceId?: string;
}
export interface VolumeStatusEvent {
  Description?: string;
  EventId?: string;
  EventType?: string;
  NotAfter?: Date;
  NotBefore?: Date;
  InstanceId?: string;
}
export declare enum VolumeStatusName {
  io_enabled = "io-enabled",
  io_performance = "io-performance",
}
export interface VolumeStatusDetails {
  Name?: VolumeStatusName | string;
  Status?: string;
}
export declare enum VolumeStatusInfoStatus {
  impaired = "impaired",
  insufficient_data = "insufficient-data",
  ok = "ok",
}
export interface VolumeStatusInfo {
  Details?: VolumeStatusDetails[];
  Status?: VolumeStatusInfoStatus | string;
}
export interface VolumeStatusItem {
  Actions?: VolumeStatusAction[];
  AvailabilityZone?: string;
  OutpostArn?: string;
  Events?: VolumeStatusEvent[];
  VolumeId?: string;
  VolumeStatus?: VolumeStatusInfo;
  AttachmentStatuses?: VolumeStatusAttachmentStatus[];
}
export interface DescribeVolumeStatusResult {
  NextToken?: string;
  VolumeStatuses?: VolumeStatusItem[];
}
export declare enum VpcAttributeName {
  enableDnsHostnames = "enableDnsHostnames",
  enableDnsSupport = "enableDnsSupport",
}
export interface DescribeVpcAttributeRequest {
  Attribute: VpcAttributeName | string | undefined;
  VpcId: string | undefined;
  DryRun?: boolean;
}
export interface DescribeVpcAttributeResult {
  VpcId?: string;
  EnableDnsHostnames?: AttributeBooleanValue;
  EnableDnsSupport?: AttributeBooleanValue;
}
export interface DescribeVpcClassicLinkRequest {
  Filters?: Filter[];
  DryRun?: boolean;
  VpcIds?: string[];
}
export interface VpcClassicLink {
  ClassicLinkEnabled?: boolean;
  Tags?: Tag[];
  VpcId?: string;
}
export interface DescribeVpcClassicLinkResult {
  Vpcs?: VpcClassicLink[];
}
export interface DescribeVpcClassicLinkDnsSupportRequest {
  MaxResults?: number;
  NextToken?: string;
  VpcIds?: string[];
}
export interface ClassicLinkDnsSupport {
  ClassicLinkDnsSupported?: boolean;
  VpcId?: string;
}
export interface DescribeVpcClassicLinkDnsSupportResult {
  NextToken?: string;
  Vpcs?: ClassicLinkDnsSupport[];
}
export interface DescribeVpcEndpointConnectionNotificationsRequest {
  DryRun?: boolean;
  ConnectionNotificationId?: string;
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
}
export interface DescribeVpcEndpointConnectionNotificationsResult {
  ConnectionNotificationSet?: ConnectionNotification[];
  NextToken?: string;
}
export interface DescribeVpcEndpointConnectionsRequest {
  DryRun?: boolean;
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
}
export interface VpcEndpointConnection {
  ServiceId?: string;
  VpcEndpointId?: string;
  VpcEndpointOwner?: string;
  VpcEndpointState?: State | string;
  CreationTimestamp?: Date;
  DnsEntries?: DnsEntry[];
  NetworkLoadBalancerArns?: string[];
  GatewayLoadBalancerArns?: string[];
  IpAddressType?: IpAddressType | string;
  VpcEndpointConnectionId?: string;
  Tags?: Tag[];
}
export interface DescribeVpcEndpointConnectionsResult {
  VpcEndpointConnections?: VpcEndpointConnection[];
  NextToken?: string;
}
export interface DescribeVpcEndpointsRequest {
  DryRun?: boolean;
  VpcEndpointIds?: string[];
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
}
export interface DescribeVpcEndpointsResult {
  VpcEndpoints?: VpcEndpoint[];
  NextToken?: string;
}
export interface DescribeVpcEndpointServiceConfigurationsRequest {
  DryRun?: boolean;
  ServiceIds?: string[];
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
}
export interface DescribeVpcEndpointServiceConfigurationsResult {
  ServiceConfigurations?: ServiceConfiguration[];
  NextToken?: string;
}
export interface DescribeVpcEndpointServicePermissionsRequest {
  DryRun?: boolean;
  ServiceId: string | undefined;
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
}
export interface DescribeVpcEndpointServicePermissionsResult {
  AllowedPrincipals?: AllowedPrincipal[];
  NextToken?: string;
}
export interface DescribeVpcEndpointServicesRequest {
  DryRun?: boolean;
  ServiceNames?: string[];
  Filters?: Filter[];
  MaxResults?: number;
  NextToken?: string;
}
export interface PrivateDnsDetails {
  PrivateDnsName?: string;
}
export interface ServiceDetail {
  ServiceName?: string;
  ServiceId?: string;
  ServiceType?: ServiceTypeDetail[];
  AvailabilityZones?: string[];
  Owner?: string;
  BaseEndpointDnsNames?: string[];
  PrivateDnsName?: string;
  PrivateDnsNames?: PrivateDnsDetails[];
  VpcEndpointPolicySupported?: boolean;
  AcceptanceRequired?: boolean;
  ManagesVpcEndpoints?: boolean;
  PayerResponsibility?: PayerResponsibility | string;
  Tags?: Tag[];
  PrivateDnsNameVerificationState?: DnsNameState | string;
  SupportedIpAddressTypes?: (ServiceConnectivityType | string)[];
}
export interface DescribeVpcEndpointServicesResult {
  ServiceNames?: string[];
  ServiceDetails?: ServiceDetail[];
  NextToken?: string;
}
export interface DescribeVpcPeeringConnectionsRequest {
  Filters?: Filter[];
  DryRun?: boolean;
  VpcPeeringConnectionIds?: string[];
  NextToken?: string;
  MaxResults?: number;
}
export interface DescribeVpcPeeringConnectionsResult {
  VpcPeeringConnections?: VpcPeeringConnection[];
  NextToken?: string;
}
export interface DescribeVpcsRequest {
  Filters?: Filter[];
  VpcIds?: string[];
  DryRun?: boolean;
  NextToken?: string;
  MaxResults?: number;
}
export interface DescribeVpcsResult {
  Vpcs?: Vpc[];
  NextToken?: string;
}
export interface DescribeVpnConnectionsRequest {
  Filters?: Filter[];
  VpnConnectionIds?: string[];
  DryRun?: boolean;
}
export interface DescribeVpnConnectionsResult {
  VpnConnections?: VpnConnection[];
}
export interface DescribeVpnGatewaysRequest {
  Filters?: Filter[];
  VpnGatewayIds?: string[];
  DryRun?: boolean;
}
export interface DescribeVpnGatewaysResult {
  VpnGateways?: VpnGateway[];
}
export interface DetachClassicLinkVpcRequest {
  DryRun?: boolean;
  InstanceId: string | undefined;
  VpcId: string | undefined;
}
export interface DetachClassicLinkVpcResult {
  Return?: boolean;
}
export interface DetachInternetGatewayRequest {
  DryRun?: boolean;
  InternetGatewayId: string | undefined;
  VpcId: string | undefined;
}
export interface DetachNetworkInterfaceRequest {
  AttachmentId: string | undefined;
  DryRun?: boolean;
  Force?: boolean;
}
export interface DetachVolumeRequest {
  Device?: string;
  Force?: boolean;
  InstanceId?: string;
  VolumeId: string | undefined;
  DryRun?: boolean;
}
export interface DetachVpnGatewayRequest {
  VpcId: string | undefined;
  VpnGatewayId: string | undefined;
  DryRun?: boolean;
}
export interface DisableEbsEncryptionByDefaultRequest {
  DryRun?: boolean;
}
export interface DisableEbsEncryptionByDefaultResult {
  EbsEncryptionByDefault?: boolean;
}
export interface DisableFastLaunchRequest {
  ImageId: string | undefined;
  Force?: boolean;
  DryRun?: boolean;
}
export interface DisableFastLaunchResult {
  ImageId?: string;
  ResourceType?: FastLaunchResourceType | string;
  SnapshotConfiguration?: FastLaunchSnapshotConfigurationResponse;
  LaunchTemplate?: FastLaunchLaunchTemplateSpecificationResponse;
  MaxParallelLaunches?: number;
  OwnerId?: string;
  State?: FastLaunchStateCode | string;
  StateTransitionReason?: string;
  StateTransitionTime?: Date;
}
export interface DisableFastSnapshotRestoresRequest {
  AvailabilityZones: string[] | undefined;
  SourceSnapshotIds: string[] | undefined;
  DryRun?: boolean;
}
export interface DisableFastSnapshotRestoreSuccessItem {
  SnapshotId?: string;
  AvailabilityZone?: string;
  State?: FastSnapshotRestoreStateCode | string;
  StateTransitionReason?: string;
  OwnerId?: string;
  OwnerAlias?: string;
  EnablingTime?: Date;
  OptimizingTime?: Date;
  EnabledTime?: Date;
  DisablingTime?: Date;
  DisabledTime?: Date;
}
export interface DisableFastSnapshotRestoreStateError {
  Code?: string;
  Message?: string;
}
export interface DisableFastSnapshotRestoreStateErrorItem {
  AvailabilityZone?: string;
  Error?: DisableFastSnapshotRestoreStateError;
}
export interface DisableFastSnapshotRestoreErrorItem {
  SnapshotId?: string;
  FastSnapshotRestoreStateErrors?: DisableFastSnapshotRestoreStateErrorItem[];
}
export interface DisableFastSnapshotRestoresResult {
  Successful?: DisableFastSnapshotRestoreSuccessItem[];
  Unsuccessful?: DisableFastSnapshotRestoreErrorItem[];
}
export interface DisableImageDeprecationRequest {
  ImageId: string | undefined;
  DryRun?: boolean;
}
export interface DisableImageDeprecationResult {
  Return?: boolean;
}
export interface DisableIpamOrganizationAdminAccountRequest {
  DryRun?: boolean;
  DelegatedAdminAccountId: string | undefined;
}
export interface DisableIpamOrganizationAdminAccountResult {
  Success?: boolean;
}
export interface DisableSerialConsoleAccessRequest {
  DryRun?: boolean;
}
export interface DisableSerialConsoleAccessResult {
  SerialConsoleAccessEnabled?: boolean;
}
export interface DisableTransitGatewayRouteTablePropagationRequest {
  TransitGatewayRouteTableId: string | undefined;
  TransitGatewayAttachmentId?: string;
  DryRun?: boolean;
  TransitGatewayRouteTableAnnouncementId?: string;
}
export declare enum TransitGatewayPropagationState {
  disabled = "disabled",
  disabling = "disabling",
  enabled = "enabled",
  enabling = "enabling",
}
export interface TransitGatewayPropagation {
  TransitGatewayAttachmentId?: string;
  ResourceId?: string;
  ResourceType?: TransitGatewayAttachmentResourceType | string;
  TransitGatewayRouteTableId?: string;
  State?: TransitGatewayPropagationState | string;
  TransitGatewayRouteTableAnnouncementId?: string;
}
export interface DisableTransitGatewayRouteTablePropagationResult {
  Propagation?: TransitGatewayPropagation;
}
export interface DisableVgwRoutePropagationRequest {
  GatewayId: string | undefined;
  RouteTableId: string | undefined;
  DryRun?: boolean;
}
export interface DisableVpcClassicLinkRequest {
  DryRun?: boolean;
  VpcId: string | undefined;
}
export interface DisableVpcClassicLinkResult {
  Return?: boolean;
}
export interface DisableVpcClassicLinkDnsSupportRequest {
  VpcId?: string;
}
export interface DisableVpcClassicLinkDnsSupportResult {
  Return?: boolean;
}
export interface DisassociateAddressRequest {
  AssociationId?: string;
  PublicIp?: string;
  DryRun?: boolean;
}
export interface DisassociateClientVpnTargetNetworkRequest {
  ClientVpnEndpointId: string | undefined;
  AssociationId: string | undefined;
  DryRun?: boolean;
}
export interface DisassociateClientVpnTargetNetworkResult {
  AssociationId?: string;
  Status?: AssociationStatus;
}
export interface DisassociateEnclaveCertificateIamRoleRequest {
  CertificateArn?: string;
  RoleArn?: string;
  DryRun?: boolean;
}
export interface DisassociateEnclaveCertificateIamRoleResult {
  Return?: boolean;
}
export interface DisassociateIamInstanceProfileRequest {
  AssociationId: string | undefined;
}
export interface DisassociateIamInstanceProfileResult {
  IamInstanceProfileAssociation?: IamInstanceProfileAssociation;
}
export interface InstanceEventWindowDisassociationRequest {
  InstanceIds?: string[];
  InstanceTags?: Tag[];
  DedicatedHostIds?: string[];
}
export interface DisassociateInstanceEventWindowRequest {
  DryRun?: boolean;
  InstanceEventWindowId: string | undefined;
  AssociationTarget: InstanceEventWindowDisassociationRequest | undefined;
}
export interface DisassociateInstanceEventWindowResult {
  InstanceEventWindow?: InstanceEventWindow;
}
export interface DisassociateRouteTableRequest {
  AssociationId: string | undefined;
  DryRun?: boolean;
}
export interface DisassociateSubnetCidrBlockRequest {
  AssociationId: string | undefined;
}
export interface DisassociateSubnetCidrBlockResult {
  Ipv6CidrBlockAssociation?: SubnetIpv6CidrBlockAssociation;
  SubnetId?: string;
}
export interface DisassociateTransitGatewayMulticastDomainRequest {
  TransitGatewayMulticastDomainId?: string;
  TransitGatewayAttachmentId?: string;
  SubnetIds?: string[];
  DryRun?: boolean;
}
export interface DisassociateTransitGatewayMulticastDomainResult {
  Associations?: TransitGatewayMulticastDomainAssociations;
}
export interface DisassociateTransitGatewayPolicyTableRequest {
  TransitGatewayPolicyTableId: string | undefined;
  TransitGatewayAttachmentId: string | undefined;
  DryRun?: boolean;
}
export interface DisassociateTransitGatewayPolicyTableResult {
  Association?: TransitGatewayPolicyTableAssociation;
}
export interface DisassociateTransitGatewayRouteTableRequest {
  TransitGatewayRouteTableId: string | undefined;
  TransitGatewayAttachmentId: string | undefined;
  DryRun?: boolean;
}
export interface DisassociateTransitGatewayRouteTableResult {
  Association?: TransitGatewayAssociation;
}
export interface DisassociateTrunkInterfaceRequest {
  AssociationId: string | undefined;
  ClientToken?: string;
  DryRun?: boolean;
}
export interface DisassociateTrunkInterfaceResult {
  Return?: boolean;
  ClientToken?: string;
}
export interface DisassociateVpcCidrBlockRequest {
  AssociationId: string | undefined;
}
export interface DisassociateVpcCidrBlockResult {
  Ipv6CidrBlockAssociation?: VpcIpv6CidrBlockAssociation;
  CidrBlockAssociation?: VpcCidrBlockAssociation;
  VpcId?: string;
}
export interface EnableEbsEncryptionByDefaultRequest {
  DryRun?: boolean;
}
export interface EnableEbsEncryptionByDefaultResult {
  EbsEncryptionByDefault?: boolean;
}
export interface FastLaunchLaunchTemplateSpecificationRequest {
  LaunchTemplateId?: string;
  LaunchTemplateName?: string;
  Version: string | undefined;
}
export interface FastLaunchSnapshotConfigurationRequest {
  TargetResourceCount?: number;
}
export interface EnableFastLaunchRequest {
  ImageId: string | undefined;
  ResourceType?: string;
  SnapshotConfiguration?: FastLaunchSnapshotConfigurationRequest;
  LaunchTemplate?: FastLaunchLaunchTemplateSpecificationRequest;
  MaxParallelLaunches?: number;
  DryRun?: boolean;
}
export interface EnableFastLaunchResult {
  ImageId?: string;
  ResourceType?: FastLaunchResourceType | string;
  SnapshotConfiguration?: FastLaunchSnapshotConfigurationResponse;
  LaunchTemplate?: FastLaunchLaunchTemplateSpecificationResponse;
  MaxParallelLaunches?: number;
  OwnerId?: string;
  State?: FastLaunchStateCode | string;
  StateTransitionReason?: string;
  StateTransitionTime?: Date;
}
export interface EnableFastSnapshotRestoresRequest {
  AvailabilityZones: string[] | undefined;
  SourceSnapshotIds: string[] | undefined;
  DryRun?: boolean;
}
export interface EnableFastSnapshotRestoreSuccessItem {
  SnapshotId?: string;
  AvailabilityZone?: string;
  State?: FastSnapshotRestoreStateCode | string;
  StateTransitionReason?: string;
  OwnerId?: string;
  OwnerAlias?: string;
  EnablingTime?: Date;
  OptimizingTime?: Date;
  EnabledTime?: Date;
  DisablingTime?: Date;
  DisabledTime?: Date;
}
export declare const LocalGatewayFilterSensitiveLog: (obj: LocalGateway) => any;
export declare const DescribeLocalGatewaysResultFilterSensitiveLog: (
  obj: DescribeLocalGatewaysResult
) => any;
export declare const DescribeLocalGatewayVirtualInterfaceGroupsRequestFilterSensitiveLog: (
  obj: DescribeLocalGatewayVirtualInterfaceGroupsRequest
) => any;
export declare const LocalGatewayVirtualInterfaceGroupFilterSensitiveLog: (
  obj: LocalGatewayVirtualInterfaceGroup
) => any;
export declare const DescribeLocalGatewayVirtualInterfaceGroupsResultFilterSensitiveLog: (
  obj: DescribeLocalGatewayVirtualInterfaceGroupsResult
) => any;
export declare const DescribeLocalGatewayVirtualInterfacesRequestFilterSensitiveLog: (
  obj: DescribeLocalGatewayVirtualInterfacesRequest
) => any;
export declare const LocalGatewayVirtualInterfaceFilterSensitiveLog: (
  obj: LocalGatewayVirtualInterface
) => any;
export declare const DescribeLocalGatewayVirtualInterfacesResultFilterSensitiveLog: (
  obj: DescribeLocalGatewayVirtualInterfacesResult
) => any;
export declare const DescribeManagedPrefixListsRequestFilterSensitiveLog: (
  obj: DescribeManagedPrefixListsRequest
) => any;
export declare const DescribeManagedPrefixListsResultFilterSensitiveLog: (
  obj: DescribeManagedPrefixListsResult
) => any;
export declare const DescribeMovingAddressesRequestFilterSensitiveLog: (
  obj: DescribeMovingAddressesRequest
) => any;
export declare const MovingAddressStatusFilterSensitiveLog: (
  obj: MovingAddressStatus
) => any;
export declare const DescribeMovingAddressesResultFilterSensitiveLog: (
  obj: DescribeMovingAddressesResult
) => any;
export declare const DescribeNatGatewaysRequestFilterSensitiveLog: (
  obj: DescribeNatGatewaysRequest
) => any;
export declare const DescribeNatGatewaysResultFilterSensitiveLog: (
  obj: DescribeNatGatewaysResult
) => any;
export declare const DescribeNetworkAclsRequestFilterSensitiveLog: (
  obj: DescribeNetworkAclsRequest
) => any;
export declare const DescribeNetworkAclsResultFilterSensitiveLog: (
  obj: DescribeNetworkAclsResult
) => any;
export declare const DescribeNetworkInsightsAccessScopeAnalysesRequestFilterSensitiveLog: (
  obj: DescribeNetworkInsightsAccessScopeAnalysesRequest
) => any;
export declare const NetworkInsightsAccessScopeAnalysisFilterSensitiveLog: (
  obj: NetworkInsightsAccessScopeAnalysis
) => any;
export declare const DescribeNetworkInsightsAccessScopeAnalysesResultFilterSensitiveLog: (
  obj: DescribeNetworkInsightsAccessScopeAnalysesResult
) => any;
export declare const DescribeNetworkInsightsAccessScopesRequestFilterSensitiveLog: (
  obj: DescribeNetworkInsightsAccessScopesRequest
) => any;
export declare const DescribeNetworkInsightsAccessScopesResultFilterSensitiveLog: (
  obj: DescribeNetworkInsightsAccessScopesResult
) => any;
export declare const DescribeNetworkInsightsAnalysesRequestFilterSensitiveLog: (
  obj: DescribeNetworkInsightsAnalysesRequest
) => any;
export declare const NetworkInsightsAnalysisFilterSensitiveLog: (
  obj: NetworkInsightsAnalysis
) => any;
export declare const DescribeNetworkInsightsAnalysesResultFilterSensitiveLog: (
  obj: DescribeNetworkInsightsAnalysesResult
) => any;
export declare const DescribeNetworkInsightsPathsRequestFilterSensitiveLog: (
  obj: DescribeNetworkInsightsPathsRequest
) => any;
export declare const DescribeNetworkInsightsPathsResultFilterSensitiveLog: (
  obj: DescribeNetworkInsightsPathsResult
) => any;
export declare const DescribeNetworkInterfaceAttributeRequestFilterSensitiveLog: (
  obj: DescribeNetworkInterfaceAttributeRequest
) => any;
export declare const DescribeNetworkInterfaceAttributeResultFilterSensitiveLog: (
  obj: DescribeNetworkInterfaceAttributeResult
) => any;
export declare const DescribeNetworkInterfacePermissionsRequestFilterSensitiveLog: (
  obj: DescribeNetworkInterfacePermissionsRequest
) => any;
export declare const DescribeNetworkInterfacePermissionsResultFilterSensitiveLog: (
  obj: DescribeNetworkInterfacePermissionsResult
) => any;
export declare const DescribeNetworkInterfacesRequestFilterSensitiveLog: (
  obj: DescribeNetworkInterfacesRequest
) => any;
export declare const DescribeNetworkInterfacesResultFilterSensitiveLog: (
  obj: DescribeNetworkInterfacesResult
) => any;
export declare const DescribePlacementGroupsRequestFilterSensitiveLog: (
  obj: DescribePlacementGroupsRequest
) => any;
export declare const DescribePlacementGroupsResultFilterSensitiveLog: (
  obj: DescribePlacementGroupsResult
) => any;
export declare const DescribePrefixListsRequestFilterSensitiveLog: (
  obj: DescribePrefixListsRequest
) => any;
export declare const PrefixListFilterSensitiveLog: (obj: PrefixList) => any;
export declare const DescribePrefixListsResultFilterSensitiveLog: (
  obj: DescribePrefixListsResult
) => any;
export declare const DescribePrincipalIdFormatRequestFilterSensitiveLog: (
  obj: DescribePrincipalIdFormatRequest
) => any;
export declare const PrincipalIdFormatFilterSensitiveLog: (
  obj: PrincipalIdFormat
) => any;
export declare const DescribePrincipalIdFormatResultFilterSensitiveLog: (
  obj: DescribePrincipalIdFormatResult
) => any;
export declare const DescribePublicIpv4PoolsRequestFilterSensitiveLog: (
  obj: DescribePublicIpv4PoolsRequest
) => any;
export declare const PublicIpv4PoolRangeFilterSensitiveLog: (
  obj: PublicIpv4PoolRange
) => any;
export declare const PublicIpv4PoolFilterSensitiveLog: (
  obj: PublicIpv4Pool
) => any;
export declare const DescribePublicIpv4PoolsResultFilterSensitiveLog: (
  obj: DescribePublicIpv4PoolsResult
) => any;
export declare const DescribeRegionsRequestFilterSensitiveLog: (
  obj: DescribeRegionsRequest
) => any;
export declare const RegionFilterSensitiveLog: (obj: Region) => any;
export declare const DescribeRegionsResultFilterSensitiveLog: (
  obj: DescribeRegionsResult
) => any;
export declare const DescribeReplaceRootVolumeTasksRequestFilterSensitiveLog: (
  obj: DescribeReplaceRootVolumeTasksRequest
) => any;
export declare const DescribeReplaceRootVolumeTasksResultFilterSensitiveLog: (
  obj: DescribeReplaceRootVolumeTasksResult
) => any;
export declare const DescribeReservedInstancesRequestFilterSensitiveLog: (
  obj: DescribeReservedInstancesRequest
) => any;
export declare const RecurringChargeFilterSensitiveLog: (
  obj: RecurringCharge
) => any;
export declare const ReservedInstancesFilterSensitiveLog: (
  obj: ReservedInstances
) => any;
export declare const DescribeReservedInstancesResultFilterSensitiveLog: (
  obj: DescribeReservedInstancesResult
) => any;
export declare const DescribeReservedInstancesListingsRequestFilterSensitiveLog: (
  obj: DescribeReservedInstancesListingsRequest
) => any;
export declare const DescribeReservedInstancesListingsResultFilterSensitiveLog: (
  obj: DescribeReservedInstancesListingsResult
) => any;
export declare const DescribeReservedInstancesModificationsRequestFilterSensitiveLog: (
  obj: DescribeReservedInstancesModificationsRequest
) => any;
export declare const ReservedInstancesConfigurationFilterSensitiveLog: (
  obj: ReservedInstancesConfiguration
) => any;
export declare const ReservedInstancesModificationResultFilterSensitiveLog: (
  obj: ReservedInstancesModificationResult
) => any;
export declare const ReservedInstancesIdFilterSensitiveLog: (
  obj: ReservedInstancesId
) => any;
export declare const ReservedInstancesModificationFilterSensitiveLog: (
  obj: ReservedInstancesModification
) => any;
export declare const DescribeReservedInstancesModificationsResultFilterSensitiveLog: (
  obj: DescribeReservedInstancesModificationsResult
) => any;
export declare const DescribeReservedInstancesOfferingsRequestFilterSensitiveLog: (
  obj: DescribeReservedInstancesOfferingsRequest
) => any;
export declare const PricingDetailFilterSensitiveLog: (
  obj: PricingDetail
) => any;
export declare const ReservedInstancesOfferingFilterSensitiveLog: (
  obj: ReservedInstancesOffering
) => any;
export declare const DescribeReservedInstancesOfferingsResultFilterSensitiveLog: (
  obj: DescribeReservedInstancesOfferingsResult
) => any;
export declare const DescribeRouteTablesRequestFilterSensitiveLog: (
  obj: DescribeRouteTablesRequest
) => any;
export declare const DescribeRouteTablesResultFilterSensitiveLog: (
  obj: DescribeRouteTablesResult
) => any;
export declare const SlotDateTimeRangeRequestFilterSensitiveLog: (
  obj: SlotDateTimeRangeRequest
) => any;
export declare const ScheduledInstanceRecurrenceRequestFilterSensitiveLog: (
  obj: ScheduledInstanceRecurrenceRequest
) => any;
export declare const DescribeScheduledInstanceAvailabilityRequestFilterSensitiveLog: (
  obj: DescribeScheduledInstanceAvailabilityRequest
) => any;
export declare const ScheduledInstanceRecurrenceFilterSensitiveLog: (
  obj: ScheduledInstanceRecurrence
) => any;
export declare const ScheduledInstanceAvailabilityFilterSensitiveLog: (
  obj: ScheduledInstanceAvailability
) => any;
export declare const DescribeScheduledInstanceAvailabilityResultFilterSensitiveLog: (
  obj: DescribeScheduledInstanceAvailabilityResult
) => any;
export declare const SlotStartTimeRangeRequestFilterSensitiveLog: (
  obj: SlotStartTimeRangeRequest
) => any;
export declare const DescribeScheduledInstancesRequestFilterSensitiveLog: (
  obj: DescribeScheduledInstancesRequest
) => any;
export declare const ScheduledInstanceFilterSensitiveLog: (
  obj: ScheduledInstance
) => any;
export declare const DescribeScheduledInstancesResultFilterSensitiveLog: (
  obj: DescribeScheduledInstancesResult
) => any;
export declare const DescribeSecurityGroupReferencesRequestFilterSensitiveLog: (
  obj: DescribeSecurityGroupReferencesRequest
) => any;
export declare const SecurityGroupReferenceFilterSensitiveLog: (
  obj: SecurityGroupReference
) => any;
export declare const DescribeSecurityGroupReferencesResultFilterSensitiveLog: (
  obj: DescribeSecurityGroupReferencesResult
) => any;
export declare const DescribeSecurityGroupRulesRequestFilterSensitiveLog: (
  obj: DescribeSecurityGroupRulesRequest
) => any;
export declare const DescribeSecurityGroupRulesResultFilterSensitiveLog: (
  obj: DescribeSecurityGroupRulesResult
) => any;
export declare const DescribeSecurityGroupsRequestFilterSensitiveLog: (
  obj: DescribeSecurityGroupsRequest
) => any;
export declare const SecurityGroupFilterSensitiveLog: (
  obj: SecurityGroup
) => any;
export declare const DescribeSecurityGroupsResultFilterSensitiveLog: (
  obj: DescribeSecurityGroupsResult
) => any;
export declare const DescribeSnapshotAttributeRequestFilterSensitiveLog: (
  obj: DescribeSnapshotAttributeRequest
) => any;
export declare const CreateVolumePermissionFilterSensitiveLog: (
  obj: CreateVolumePermission
) => any;
export declare const DescribeSnapshotAttributeResultFilterSensitiveLog: (
  obj: DescribeSnapshotAttributeResult
) => any;
export declare const DescribeSnapshotsRequestFilterSensitiveLog: (
  obj: DescribeSnapshotsRequest
) => any;
export declare const DescribeSnapshotsResultFilterSensitiveLog: (
  obj: DescribeSnapshotsResult
) => any;
export declare const DescribeSnapshotTierStatusRequestFilterSensitiveLog: (
  obj: DescribeSnapshotTierStatusRequest
) => any;
export declare const SnapshotTierStatusFilterSensitiveLog: (
  obj: SnapshotTierStatus
) => any;
export declare const DescribeSnapshotTierStatusResultFilterSensitiveLog: (
  obj: DescribeSnapshotTierStatusResult
) => any;
export declare const DescribeSpotDatafeedSubscriptionRequestFilterSensitiveLog: (
  obj: DescribeSpotDatafeedSubscriptionRequest
) => any;
export declare const DescribeSpotDatafeedSubscriptionResultFilterSensitiveLog: (
  obj: DescribeSpotDatafeedSubscriptionResult
) => any;
export declare const DescribeSpotFleetInstancesRequestFilterSensitiveLog: (
  obj: DescribeSpotFleetInstancesRequest
) => any;
export declare const DescribeSpotFleetInstancesResponseFilterSensitiveLog: (
  obj: DescribeSpotFleetInstancesResponse
) => any;
export declare const DescribeSpotFleetRequestHistoryRequestFilterSensitiveLog: (
  obj: DescribeSpotFleetRequestHistoryRequest
) => any;
export declare const HistoryRecordFilterSensitiveLog: (
  obj: HistoryRecord
) => any;
export declare const DescribeSpotFleetRequestHistoryResponseFilterSensitiveLog: (
  obj: DescribeSpotFleetRequestHistoryResponse
) => any;
export declare const DescribeSpotFleetRequestsRequestFilterSensitiveLog: (
  obj: DescribeSpotFleetRequestsRequest
) => any;
export declare const SpotFleetMonitoringFilterSensitiveLog: (
  obj: SpotFleetMonitoring
) => any;
export declare const InstanceNetworkInterfaceSpecificationFilterSensitiveLog: (
  obj: InstanceNetworkInterfaceSpecification
) => any;
export declare const SpotPlacementFilterSensitiveLog: (
  obj: SpotPlacement
) => any;
export declare const SpotFleetTagSpecificationFilterSensitiveLog: (
  obj: SpotFleetTagSpecification
) => any;
export declare const SpotFleetLaunchSpecificationFilterSensitiveLog: (
  obj: SpotFleetLaunchSpecification
) => any;
export declare const LaunchTemplateOverridesFilterSensitiveLog: (
  obj: LaunchTemplateOverrides
) => any;
export declare const LaunchTemplateConfigFilterSensitiveLog: (
  obj: LaunchTemplateConfig
) => any;
export declare const ClassicLoadBalancerFilterSensitiveLog: (
  obj: ClassicLoadBalancer
) => any;
export declare const ClassicLoadBalancersConfigFilterSensitiveLog: (
  obj: ClassicLoadBalancersConfig
) => any;
export declare const TargetGroupFilterSensitiveLog: (obj: TargetGroup) => any;
export declare const TargetGroupsConfigFilterSensitiveLog: (
  obj: TargetGroupsConfig
) => any;
export declare const LoadBalancersConfigFilterSensitiveLog: (
  obj: LoadBalancersConfig
) => any;
export declare const SpotCapacityRebalanceFilterSensitiveLog: (
  obj: SpotCapacityRebalance
) => any;
export declare const SpotMaintenanceStrategiesFilterSensitiveLog: (
  obj: SpotMaintenanceStrategies
) => any;
export declare const SpotFleetRequestConfigDataFilterSensitiveLog: (
  obj: SpotFleetRequestConfigData
) => any;
export declare const SpotFleetRequestConfigFilterSensitiveLog: (
  obj: SpotFleetRequestConfig
) => any;
export declare const DescribeSpotFleetRequestsResponseFilterSensitiveLog: (
  obj: DescribeSpotFleetRequestsResponse
) => any;
export declare const DescribeSpotInstanceRequestsRequestFilterSensitiveLog: (
  obj: DescribeSpotInstanceRequestsRequest
) => any;
export declare const RunInstancesMonitoringEnabledFilterSensitiveLog: (
  obj: RunInstancesMonitoringEnabled
) => any;
export declare const LaunchSpecificationFilterSensitiveLog: (
  obj: LaunchSpecification
) => any;
export declare const SpotInstanceStatusFilterSensitiveLog: (
  obj: SpotInstanceStatus
) => any;
export declare const SpotInstanceRequestFilterSensitiveLog: (
  obj: SpotInstanceRequest
) => any;
export declare const DescribeSpotInstanceRequestsResultFilterSensitiveLog: (
  obj: DescribeSpotInstanceRequestsResult
) => any;
export declare const DescribeSpotPriceHistoryRequestFilterSensitiveLog: (
  obj: DescribeSpotPriceHistoryRequest
) => any;
export declare const SpotPriceFilterSensitiveLog: (obj: SpotPrice) => any;
export declare const DescribeSpotPriceHistoryResultFilterSensitiveLog: (
  obj: DescribeSpotPriceHistoryResult
) => any;
export declare const DescribeStaleSecurityGroupsRequestFilterSensitiveLog: (
  obj: DescribeStaleSecurityGroupsRequest
) => any;
export declare const StaleIpPermissionFilterSensitiveLog: (
  obj: StaleIpPermission
) => any;
export declare const StaleSecurityGroupFilterSensitiveLog: (
  obj: StaleSecurityGroup
) => any;
export declare const DescribeStaleSecurityGroupsResultFilterSensitiveLog: (
  obj: DescribeStaleSecurityGroupsResult
) => any;
export declare const DescribeStoreImageTasksRequestFilterSensitiveLog: (
  obj: DescribeStoreImageTasksRequest
) => any;
export declare const StoreImageTaskResultFilterSensitiveLog: (
  obj: StoreImageTaskResult
) => any;
export declare const DescribeStoreImageTasksResultFilterSensitiveLog: (
  obj: DescribeStoreImageTasksResult
) => any;
export declare const DescribeSubnetsRequestFilterSensitiveLog: (
  obj: DescribeSubnetsRequest
) => any;
export declare const DescribeSubnetsResultFilterSensitiveLog: (
  obj: DescribeSubnetsResult
) => any;
export declare const DescribeTagsRequestFilterSensitiveLog: (
  obj: DescribeTagsRequest
) => any;
export declare const TagDescriptionFilterSensitiveLog: (
  obj: TagDescription
) => any;
export declare const DescribeTagsResultFilterSensitiveLog: (
  obj: DescribeTagsResult
) => any;
export declare const DescribeTrafficMirrorFiltersRequestFilterSensitiveLog: (
  obj: DescribeTrafficMirrorFiltersRequest
) => any;
export declare const DescribeTrafficMirrorFiltersResultFilterSensitiveLog: (
  obj: DescribeTrafficMirrorFiltersResult
) => any;
export declare const DescribeTrafficMirrorSessionsRequestFilterSensitiveLog: (
  obj: DescribeTrafficMirrorSessionsRequest
) => any;
export declare const DescribeTrafficMirrorSessionsResultFilterSensitiveLog: (
  obj: DescribeTrafficMirrorSessionsResult
) => any;
export declare const DescribeTrafficMirrorTargetsRequestFilterSensitiveLog: (
  obj: DescribeTrafficMirrorTargetsRequest
) => any;
export declare const DescribeTrafficMirrorTargetsResultFilterSensitiveLog: (
  obj: DescribeTrafficMirrorTargetsResult
) => any;
export declare const DescribeTransitGatewayAttachmentsRequestFilterSensitiveLog: (
  obj: DescribeTransitGatewayAttachmentsRequest
) => any;
export declare const TransitGatewayAttachmentAssociationFilterSensitiveLog: (
  obj: TransitGatewayAttachmentAssociation
) => any;
export declare const TransitGatewayAttachmentFilterSensitiveLog: (
  obj: TransitGatewayAttachment
) => any;
export declare const DescribeTransitGatewayAttachmentsResultFilterSensitiveLog: (
  obj: DescribeTransitGatewayAttachmentsResult
) => any;
export declare const DescribeTransitGatewayConnectPeersRequestFilterSensitiveLog: (
  obj: DescribeTransitGatewayConnectPeersRequest
) => any;
export declare const DescribeTransitGatewayConnectPeersResultFilterSensitiveLog: (
  obj: DescribeTransitGatewayConnectPeersResult
) => any;
export declare const DescribeTransitGatewayConnectsRequestFilterSensitiveLog: (
  obj: DescribeTransitGatewayConnectsRequest
) => any;
export declare const DescribeTransitGatewayConnectsResultFilterSensitiveLog: (
  obj: DescribeTransitGatewayConnectsResult
) => any;
export declare const DescribeTransitGatewayMulticastDomainsRequestFilterSensitiveLog: (
  obj: DescribeTransitGatewayMulticastDomainsRequest
) => any;
export declare const DescribeTransitGatewayMulticastDomainsResultFilterSensitiveLog: (
  obj: DescribeTransitGatewayMulticastDomainsResult
) => any;
export declare const DescribeTransitGatewayPeeringAttachmentsRequestFilterSensitiveLog: (
  obj: DescribeTransitGatewayPeeringAttachmentsRequest
) => any;
export declare const DescribeTransitGatewayPeeringAttachmentsResultFilterSensitiveLog: (
  obj: DescribeTransitGatewayPeeringAttachmentsResult
) => any;
export declare const DescribeTransitGatewayPolicyTablesRequestFilterSensitiveLog: (
  obj: DescribeTransitGatewayPolicyTablesRequest
) => any;
export declare const DescribeTransitGatewayPolicyTablesResultFilterSensitiveLog: (
  obj: DescribeTransitGatewayPolicyTablesResult
) => any;
export declare const DescribeTransitGatewayRouteTableAnnouncementsRequestFilterSensitiveLog: (
  obj: DescribeTransitGatewayRouteTableAnnouncementsRequest
) => any;
export declare const DescribeTransitGatewayRouteTableAnnouncementsResultFilterSensitiveLog: (
  obj: DescribeTransitGatewayRouteTableAnnouncementsResult
) => any;
export declare const DescribeTransitGatewayRouteTablesRequestFilterSensitiveLog: (
  obj: DescribeTransitGatewayRouteTablesRequest
) => any;
export declare const DescribeTransitGatewayRouteTablesResultFilterSensitiveLog: (
  obj: DescribeTransitGatewayRouteTablesResult
) => any;
export declare const DescribeTransitGatewaysRequestFilterSensitiveLog: (
  obj: DescribeTransitGatewaysRequest
) => any;
export declare const DescribeTransitGatewaysResultFilterSensitiveLog: (
  obj: DescribeTransitGatewaysResult
) => any;
export declare const DescribeTransitGatewayVpcAttachmentsRequestFilterSensitiveLog: (
  obj: DescribeTransitGatewayVpcAttachmentsRequest
) => any;
export declare const DescribeTransitGatewayVpcAttachmentsResultFilterSensitiveLog: (
  obj: DescribeTransitGatewayVpcAttachmentsResult
) => any;
export declare const DescribeTrunkInterfaceAssociationsRequestFilterSensitiveLog: (
  obj: DescribeTrunkInterfaceAssociationsRequest
) => any;
export declare const DescribeTrunkInterfaceAssociationsResultFilterSensitiveLog: (
  obj: DescribeTrunkInterfaceAssociationsResult
) => any;
export declare const DescribeVolumeAttributeRequestFilterSensitiveLog: (
  obj: DescribeVolumeAttributeRequest
) => any;
export declare const DescribeVolumeAttributeResultFilterSensitiveLog: (
  obj: DescribeVolumeAttributeResult
) => any;
export declare const DescribeVolumesRequestFilterSensitiveLog: (
  obj: DescribeVolumesRequest
) => any;
export declare const DescribeVolumesResultFilterSensitiveLog: (
  obj: DescribeVolumesResult
) => any;
export declare const DescribeVolumesModificationsRequestFilterSensitiveLog: (
  obj: DescribeVolumesModificationsRequest
) => any;
export declare const VolumeModificationFilterSensitiveLog: (
  obj: VolumeModification
) => any;
export declare const DescribeVolumesModificationsResultFilterSensitiveLog: (
  obj: DescribeVolumesModificationsResult
) => any;
export declare const DescribeVolumeStatusRequestFilterSensitiveLog: (
  obj: DescribeVolumeStatusRequest
) => any;
export declare const VolumeStatusActionFilterSensitiveLog: (
  obj: VolumeStatusAction
) => any;
export declare const VolumeStatusAttachmentStatusFilterSensitiveLog: (
  obj: VolumeStatusAttachmentStatus
) => any;
export declare const VolumeStatusEventFilterSensitiveLog: (
  obj: VolumeStatusEvent
) => any;
export declare const VolumeStatusDetailsFilterSensitiveLog: (
  obj: VolumeStatusDetails
) => any;
export declare const VolumeStatusInfoFilterSensitiveLog: (
  obj: VolumeStatusInfo
) => any;
export declare const VolumeStatusItemFilterSensitiveLog: (
  obj: VolumeStatusItem
) => any;
export declare const DescribeVolumeStatusResultFilterSensitiveLog: (
  obj: DescribeVolumeStatusResult
) => any;
export declare const DescribeVpcAttributeRequestFilterSensitiveLog: (
  obj: DescribeVpcAttributeRequest
) => any;
export declare const DescribeVpcAttributeResultFilterSensitiveLog: (
  obj: DescribeVpcAttributeResult
) => any;
export declare const DescribeVpcClassicLinkRequestFilterSensitiveLog: (
  obj: DescribeVpcClassicLinkRequest
) => any;
export declare const VpcClassicLinkFilterSensitiveLog: (
  obj: VpcClassicLink
) => any;
export declare const DescribeVpcClassicLinkResultFilterSensitiveLog: (
  obj: DescribeVpcClassicLinkResult
) => any;
export declare const DescribeVpcClassicLinkDnsSupportRequestFilterSensitiveLog: (
  obj: DescribeVpcClassicLinkDnsSupportRequest
) => any;
export declare const ClassicLinkDnsSupportFilterSensitiveLog: (
  obj: ClassicLinkDnsSupport
) => any;
export declare const DescribeVpcClassicLinkDnsSupportResultFilterSensitiveLog: (
  obj: DescribeVpcClassicLinkDnsSupportResult
) => any;
export declare const DescribeVpcEndpointConnectionNotificationsRequestFilterSensitiveLog: (
  obj: DescribeVpcEndpointConnectionNotificationsRequest
) => any;
export declare const DescribeVpcEndpointConnectionNotificationsResultFilterSensitiveLog: (
  obj: DescribeVpcEndpointConnectionNotificationsResult
) => any;
export declare const DescribeVpcEndpointConnectionsRequestFilterSensitiveLog: (
  obj: DescribeVpcEndpointConnectionsRequest
) => any;
export declare const VpcEndpointConnectionFilterSensitiveLog: (
  obj: VpcEndpointConnection
) => any;
export declare const DescribeVpcEndpointConnectionsResultFilterSensitiveLog: (
  obj: DescribeVpcEndpointConnectionsResult
) => any;
export declare const DescribeVpcEndpointsRequestFilterSensitiveLog: (
  obj: DescribeVpcEndpointsRequest
) => any;
export declare const DescribeVpcEndpointsResultFilterSensitiveLog: (
  obj: DescribeVpcEndpointsResult
) => any;
export declare const DescribeVpcEndpointServiceConfigurationsRequestFilterSensitiveLog: (
  obj: DescribeVpcEndpointServiceConfigurationsRequest
) => any;
export declare const DescribeVpcEndpointServiceConfigurationsResultFilterSensitiveLog: (
  obj: DescribeVpcEndpointServiceConfigurationsResult
) => any;
export declare const DescribeVpcEndpointServicePermissionsRequestFilterSensitiveLog: (
  obj: DescribeVpcEndpointServicePermissionsRequest
) => any;
export declare const DescribeVpcEndpointServicePermissionsResultFilterSensitiveLog: (
  obj: DescribeVpcEndpointServicePermissionsResult
) => any;
export declare const DescribeVpcEndpointServicesRequestFilterSensitiveLog: (
  obj: DescribeVpcEndpointServicesRequest
) => any;
export declare const PrivateDnsDetailsFilterSensitiveLog: (
  obj: PrivateDnsDetails
) => any;
export declare const ServiceDetailFilterSensitiveLog: (
  obj: ServiceDetail
) => any;
export declare const DescribeVpcEndpointServicesResultFilterSensitiveLog: (
  obj: DescribeVpcEndpointServicesResult
) => any;
export declare const DescribeVpcPeeringConnectionsRequestFilterSensitiveLog: (
  obj: DescribeVpcPeeringConnectionsRequest
) => any;
export declare const DescribeVpcPeeringConnectionsResultFilterSensitiveLog: (
  obj: DescribeVpcPeeringConnectionsResult
) => any;
export declare const DescribeVpcsRequestFilterSensitiveLog: (
  obj: DescribeVpcsRequest
) => any;
export declare const DescribeVpcsResultFilterSensitiveLog: (
  obj: DescribeVpcsResult
) => any;
export declare const DescribeVpnConnectionsRequestFilterSensitiveLog: (
  obj: DescribeVpnConnectionsRequest
) => any;
export declare const DescribeVpnConnectionsResultFilterSensitiveLog: (
  obj: DescribeVpnConnectionsResult
) => any;
export declare const DescribeVpnGatewaysRequestFilterSensitiveLog: (
  obj: DescribeVpnGatewaysRequest
) => any;
export declare const DescribeVpnGatewaysResultFilterSensitiveLog: (
  obj: DescribeVpnGatewaysResult
) => any;
export declare const DetachClassicLinkVpcRequestFilterSensitiveLog: (
  obj: DetachClassicLinkVpcRequest
) => any;
export declare const DetachClassicLinkVpcResultFilterSensitiveLog: (
  obj: DetachClassicLinkVpcResult
) => any;
export declare const DetachInternetGatewayRequestFilterSensitiveLog: (
  obj: DetachInternetGatewayRequest
) => any;
export declare const DetachNetworkInterfaceRequestFilterSensitiveLog: (
  obj: DetachNetworkInterfaceRequest
) => any;
export declare const DetachVolumeRequestFilterSensitiveLog: (
  obj: DetachVolumeRequest
) => any;
export declare const DetachVpnGatewayRequestFilterSensitiveLog: (
  obj: DetachVpnGatewayRequest
) => any;
export declare const DisableEbsEncryptionByDefaultRequestFilterSensitiveLog: (
  obj: DisableEbsEncryptionByDefaultRequest
) => any;
export declare const DisableEbsEncryptionByDefaultResultFilterSensitiveLog: (
  obj: DisableEbsEncryptionByDefaultResult
) => any;
export declare const DisableFastLaunchRequestFilterSensitiveLog: (
  obj: DisableFastLaunchRequest
) => any;
export declare const DisableFastLaunchResultFilterSensitiveLog: (
  obj: DisableFastLaunchResult
) => any;
export declare const DisableFastSnapshotRestoresRequestFilterSensitiveLog: (
  obj: DisableFastSnapshotRestoresRequest
) => any;
export declare const DisableFastSnapshotRestoreSuccessItemFilterSensitiveLog: (
  obj: DisableFastSnapshotRestoreSuccessItem
) => any;
export declare const DisableFastSnapshotRestoreStateErrorFilterSensitiveLog: (
  obj: DisableFastSnapshotRestoreStateError
) => any;
export declare const DisableFastSnapshotRestoreStateErrorItemFilterSensitiveLog: (
  obj: DisableFastSnapshotRestoreStateErrorItem
) => any;
export declare const DisableFastSnapshotRestoreErrorItemFilterSensitiveLog: (
  obj: DisableFastSnapshotRestoreErrorItem
) => any;
export declare const DisableFastSnapshotRestoresResultFilterSensitiveLog: (
  obj: DisableFastSnapshotRestoresResult
) => any;
export declare const DisableImageDeprecationRequestFilterSensitiveLog: (
  obj: DisableImageDeprecationRequest
) => any;
export declare const DisableImageDeprecationResultFilterSensitiveLog: (
  obj: DisableImageDeprecationResult
) => any;
export declare const DisableIpamOrganizationAdminAccountRequestFilterSensitiveLog: (
  obj: DisableIpamOrganizationAdminAccountRequest
) => any;
export declare const DisableIpamOrganizationAdminAccountResultFilterSensitiveLog: (
  obj: DisableIpamOrganizationAdminAccountResult
) => any;
export declare const DisableSerialConsoleAccessRequestFilterSensitiveLog: (
  obj: DisableSerialConsoleAccessRequest
) => any;
export declare const DisableSerialConsoleAccessResultFilterSensitiveLog: (
  obj: DisableSerialConsoleAccessResult
) => any;
export declare const DisableTransitGatewayRouteTablePropagationRequestFilterSensitiveLog: (
  obj: DisableTransitGatewayRouteTablePropagationRequest
) => any;
export declare const TransitGatewayPropagationFilterSensitiveLog: (
  obj: TransitGatewayPropagation
) => any;
export declare const DisableTransitGatewayRouteTablePropagationResultFilterSensitiveLog: (
  obj: DisableTransitGatewayRouteTablePropagationResult
) => any;
export declare const DisableVgwRoutePropagationRequestFilterSensitiveLog: (
  obj: DisableVgwRoutePropagationRequest
) => any;
export declare const DisableVpcClassicLinkRequestFilterSensitiveLog: (
  obj: DisableVpcClassicLinkRequest
) => any;
export declare const DisableVpcClassicLinkResultFilterSensitiveLog: (
  obj: DisableVpcClassicLinkResult
) => any;
export declare const DisableVpcClassicLinkDnsSupportRequestFilterSensitiveLog: (
  obj: DisableVpcClassicLinkDnsSupportRequest
) => any;
export declare const DisableVpcClassicLinkDnsSupportResultFilterSensitiveLog: (
  obj: DisableVpcClassicLinkDnsSupportResult
) => any;
export declare const DisassociateAddressRequestFilterSensitiveLog: (
  obj: DisassociateAddressRequest
) => any;
export declare const DisassociateClientVpnTargetNetworkRequestFilterSensitiveLog: (
  obj: DisassociateClientVpnTargetNetworkRequest
) => any;
export declare const DisassociateClientVpnTargetNetworkResultFilterSensitiveLog: (
  obj: DisassociateClientVpnTargetNetworkResult
) => any;
export declare const DisassociateEnclaveCertificateIamRoleRequestFilterSensitiveLog: (
  obj: DisassociateEnclaveCertificateIamRoleRequest
) => any;
export declare const DisassociateEnclaveCertificateIamRoleResultFilterSensitiveLog: (
  obj: DisassociateEnclaveCertificateIamRoleResult
) => any;
export declare const DisassociateIamInstanceProfileRequestFilterSensitiveLog: (
  obj: DisassociateIamInstanceProfileRequest
) => any;
export declare const DisassociateIamInstanceProfileResultFilterSensitiveLog: (
  obj: DisassociateIamInstanceProfileResult
) => any;
export declare const InstanceEventWindowDisassociationRequestFilterSensitiveLog: (
  obj: InstanceEventWindowDisassociationRequest
) => any;
export declare const DisassociateInstanceEventWindowRequestFilterSensitiveLog: (
  obj: DisassociateInstanceEventWindowRequest
) => any;
export declare const DisassociateInstanceEventWindowResultFilterSensitiveLog: (
  obj: DisassociateInstanceEventWindowResult
) => any;
export declare const DisassociateRouteTableRequestFilterSensitiveLog: (
  obj: DisassociateRouteTableRequest
) => any;
export declare const DisassociateSubnetCidrBlockRequestFilterSensitiveLog: (
  obj: DisassociateSubnetCidrBlockRequest
) => any;
export declare const DisassociateSubnetCidrBlockResultFilterSensitiveLog: (
  obj: DisassociateSubnetCidrBlockResult
) => any;
export declare const DisassociateTransitGatewayMulticastDomainRequestFilterSensitiveLog: (
  obj: DisassociateTransitGatewayMulticastDomainRequest
) => any;
export declare const DisassociateTransitGatewayMulticastDomainResultFilterSensitiveLog: (
  obj: DisassociateTransitGatewayMulticastDomainResult
) => any;
export declare const DisassociateTransitGatewayPolicyTableRequestFilterSensitiveLog: (
  obj: DisassociateTransitGatewayPolicyTableRequest
) => any;
export declare const DisassociateTransitGatewayPolicyTableResultFilterSensitiveLog: (
  obj: DisassociateTransitGatewayPolicyTableResult
) => any;
export declare const DisassociateTransitGatewayRouteTableRequestFilterSensitiveLog: (
  obj: DisassociateTransitGatewayRouteTableRequest
) => any;
export declare const DisassociateTransitGatewayRouteTableResultFilterSensitiveLog: (
  obj: DisassociateTransitGatewayRouteTableResult
) => any;
export declare const DisassociateTrunkInterfaceRequestFilterSensitiveLog: (
  obj: DisassociateTrunkInterfaceRequest
) => any;
export declare const DisassociateTrunkInterfaceResultFilterSensitiveLog: (
  obj: DisassociateTrunkInterfaceResult
) => any;
export declare const DisassociateVpcCidrBlockRequestFilterSensitiveLog: (
  obj: DisassociateVpcCidrBlockRequest
) => any;
export declare const DisassociateVpcCidrBlockResultFilterSensitiveLog: (
  obj: DisassociateVpcCidrBlockResult
) => any;
export declare const EnableEbsEncryptionByDefaultRequestFilterSensitiveLog: (
  obj: EnableEbsEncryptionByDefaultRequest
) => any;
export declare const EnableEbsEncryptionByDefaultResultFilterSensitiveLog: (
  obj: EnableEbsEncryptionByDefaultResult
) => any;
export declare const FastLaunchLaunchTemplateSpecificationRequestFilterSensitiveLog: (
  obj: FastLaunchLaunchTemplateSpecificationRequest
) => any;
export declare const FastLaunchSnapshotConfigurationRequestFilterSensitiveLog: (
  obj: FastLaunchSnapshotConfigurationRequest
) => any;
export declare const EnableFastLaunchRequestFilterSensitiveLog: (
  obj: EnableFastLaunchRequest
) => any;
export declare const EnableFastLaunchResultFilterSensitiveLog: (
  obj: EnableFastLaunchResult
) => any;
export declare const EnableFastSnapshotRestoresRequestFilterSensitiveLog: (
  obj: EnableFastSnapshotRestoresRequest
) => any;
export declare const EnableFastSnapshotRestoreSuccessItemFilterSensitiveLog: (
  obj: EnableFastSnapshotRestoreSuccessItem
) => any;
